<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="update__impl__integer_8h" kind="file" language="C++">
    <compoundname>update_impl_integer.h</compoundname>
    <includes refid="ml__array_8h" local="yes">../ml_array.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/array/update_impl_integer.h</label>
        <link refid="update__impl__integer_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="14">
        <label>inthash.h</label>
        <link refid="inthash_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>minilang.h</label>
        <link refid="minilang_8h_source"/>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="6" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>../ml_array.h</label>
        <link refid="ml__array_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>ml_compiler.h</label>
        <link refid="ml__compiler_8h_source"/>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ml_runtime.h</label>
        <link refid="ml__runtime_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="17" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>ml_types.h</label>
        <link refid="ml__types_8h_source"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
      </node>
      <node id="13">
        <label>stringmap.h</label>
        <link refid="stringmap_8h_source"/>
      </node>
      <node id="17">
        <label>limits.h</label>
      </node>
      <node id="16">
        <label>ml_config.h</label>
      </node>
      <node id="7">
        <label>setjmp.h</label>
      </node>
      <node id="12">
        <label>stdarg.h</label>
      </node>
      <node id="15">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>stdio.h</label>
      </node>
      <node id="4">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
      <node id="5">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="update__impl__integer_8h_1a75e9f2ea468b5825344f66fe3d8e034b" prot="public" static="no">
        <name>UPDATE</name>
        <param><defname>OP</defname></param>
        <param><defname>TARGET</defname></param>
        <param><defname>SOURCE</defname></param>
        <initializer>	{ \
	typeof(TARGET) _Target = TARGET; \
	typeof(SOURCE) _Source = SOURCE; \
	*_Target = OP(*_Target, _Source); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="3" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="3" bodyend="7"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1a0b5ec86a3721fe8e90919c4a12f47284" prot="public" static="no">
        <name>UPDATE_ROW_IMPL</name>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <param><defname>TARGET</defname></param>
        <param><defname>SOURCE</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="9" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="9" bodyend="44"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1a116f8bcc70c0cd8dc78240edf1ac0a41" prot="public" static="no">
        <name>ml_number</name>
        <param><defname>X</defname></param>
        <initializer>_Generic(X, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *: ml_nop, double: ml_real, default: ml_integer)(X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="46" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1ae038532ff753e5acef989ff4ac73c628" prot="public" static="no">
        <name>UPDATE_ROW_VALUE_IMPL</name>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <param><defname>SOURCE</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="48" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="48" bodyend="91"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1affed3d1259f250cc278700534ded0540" prot="public" static="no">
        <name>ml_number_value</name>
        <param><defname>T</defname></param>
        <param><defname>X</defname></param>
        <initializer>_Generic(T, double: ml_real_value, default: ml_integer_value)(X)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="93" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="93" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1af52eaa3e99bec29e094e768f69fa6618" prot="public" static="no">
        <name>UPDATE_ROW_IMPL_VALUE</name>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <param><defname>TARGET</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="95" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="95" bodyend="134"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1a15b12c4bc1a8333b6586a043ba8bf810" prot="public" static="no">
        <name>UPDATE_ROW_VALUE_IMPL_VALUE</name>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="136" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="136" bodyend="179"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1ab58a44bd820c5841244d7f5dadaf8183" prot="public" static="no">
        <name>UPDATE_ROW_TARGET_IMPL_BASE</name>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <param><defname>TARGET</defname></param>
        <initializer>UPDATE_ROW_IMPL(NAME, OP, TARGET, uint8_t) \
UPDATE_ROW_IMPL(NAME, OP, TARGET, int8_t) \
UPDATE_ROW_IMPL(NAME, OP, TARGET, uint16_t) \
UPDATE_ROW_IMPL(NAME, OP, TARGET, int16_t) \
UPDATE_ROW_IMPL(NAME, OP, TARGET, uint32_t) \
UPDATE_ROW_IMPL(NAME, OP, TARGET, int32_t) \
UPDATE_ROW_IMPL(NAME, OP, TARGET, uint64_t) \
UPDATE_ROW_IMPL(NAME, OP, TARGET, int64_t) \
UPDATE_ROW_IMPL_VALUE(NAME, OP, TARGET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="181" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="181" bodyend="190"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1a0b042b1c29b8fc9d9d19a4f7931acbce" prot="public" static="no">
        <name>UPDATE_ROW_TARGET_IMPL</name>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <param><defname>TARGET</defname></param>
        <initializer>UPDATE_ROW_TARGET_IMPL_BASE(NAME, OP, TARGET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="192" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="192" bodyend="193"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1ac16230b627e6cd95262362cfa579ba85" prot="public" static="no">
        <name>UPDATE_ROW_TARGET_VALUE_IMPL_BASE</name>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <initializer>UPDATE_ROW_VALUE_IMPL(NAME, OP, uint8_t) \
UPDATE_ROW_VALUE_IMPL(NAME, OP, int8_t) \
UPDATE_ROW_VALUE_IMPL(NAME, OP, uint16_t) \
UPDATE_ROW_VALUE_IMPL(NAME, OP, int16_t) \
UPDATE_ROW_VALUE_IMPL(NAME, OP, uint32_t) \
UPDATE_ROW_VALUE_IMPL(NAME, OP, int32_t) \
UPDATE_ROW_VALUE_IMPL(NAME, OP, uint64_t) \
UPDATE_ROW_VALUE_IMPL(NAME, OP, int64_t) \
UPDATE_ROW_VALUE_IMPL_VALUE(NAME, OP)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="195" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="195" bodyend="204"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1ae7cf8eab0d13bc2da2fcaadf32fd0b5a" prot="public" static="no">
        <name>UPDATE_ROW_TARGET_VALUE_IMPL</name>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <initializer>UPDATE_ROW_TARGET_VALUE_IMPL_BASE(NAME, OP)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="206" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="206" bodyend="207"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1a4982927e18d195556b408476bb79ce2c" prot="public" static="no">
        <name>UPDATE_ROW_OPS_IMPL_BASE</name>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <param><defname>OP2</defname></param>
        <initializer>UPDATE_ROW_TARGET_IMPL(NAME, OP, uint8_t) \
UPDATE_ROW_TARGET_IMPL(NAME, OP, int8_t) \
UPDATE_ROW_TARGET_IMPL(NAME, OP, uint16_t) \
UPDATE_ROW_TARGET_IMPL(NAME, OP, int16_t) \
UPDATE_ROW_TARGET_IMPL(NAME, OP, uint32_t) \
UPDATE_ROW_TARGET_IMPL(NAME, OP, int32_t) \
UPDATE_ROW_TARGET_IMPL(NAME, OP, uint64_t) \
UPDATE_ROW_TARGET_IMPL(NAME, OP, int64_t) \
UPDATE_ROW_TARGET_VALUE_IMPL(NAME, OP2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="209" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="209" bodyend="218"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1a80e9e906ca2daa5c0fb0119460986935" prot="public" static="no">
        <name>UPDATE_ROW_OPS_IMPL</name>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <param><defname>OP2</defname></param>
        <initializer>UPDATE_ROW_OPS_IMPL_BASE(NAME, OP, OP2)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="220" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="220" bodyend="221"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1af8875877fc4f464105443e5080387112" prot="public" static="no">
        <name>UPDATE_ROW_ENTRY</name>
        <param><defname>INDEX</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>TARGET</defname></param>
        <param><defname>SOURCE</defname></param>
        <initializer>	[INDEX] = NAME ## _row_ ## TARGET ## _ ## SOURCE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="223" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="223" bodyend="224"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1ad2e2de3c5d7a1a16f49e989a9e921883" prot="public" static="no">
        <name>UPDATE_ROW_VALUE_ENTRY</name>
        <param><defname>INDEX</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>SOURCE</defname></param>
        <initializer>	[INDEX] = NAME ## _row_any_ ## SOURCE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="226" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="226" bodyend="227"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1a1eae08e2de18160f94f3040f6bf52363" prot="public" static="no">
        <name>UPDATE_ROW_ENTRY_VALUE</name>
        <param><defname>INDEX</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>TARGET</defname></param>
        <initializer>	[INDEX] = NAME ## _row_ ## TARGET ## _any</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="229" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="229" bodyend="230"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1abf99d295712c65dcb906b103efd2ff07" prot="public" static="no">
        <name>UPDATE_ROW_VALUE_ENTRY_VALUE</name>
        <param><defname>INDEX</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>	[INDEX] = NAME ## _row_any_any</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="232" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="232" bodyend="233"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1ab78ea790b9fb3b94a3a8f29262938f48" prot="public" static="no">
        <name>UPDATE_ROW_TARGET_ENTRIES_BASE</name>
        <param><defname>INDEX</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>TARGET</defname></param>
        <initializer>UPDATE_ROW_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_U8, NAME, TARGET, uint8_t), \
UPDATE_ROW_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_I8, NAME, TARGET, int8_t), \
UPDATE_ROW_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_U16, NAME, TARGET, uint16_t), \
UPDATE_ROW_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_I16, NAME, TARGET, int16_t), \
UPDATE_ROW_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_U32, NAME, TARGET, uint32_t), \
UPDATE_ROW_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_I32, NAME, TARGET, int32_t), \
UPDATE_ROW_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_U64, NAME, TARGET, uint64_t), \
UPDATE_ROW_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_I64, NAME, TARGET, int64_t), \
UPDATE_ROW_ENTRY_VALUE(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_ANY, NAME, TARGET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="235" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="235" bodyend="244"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1a110c7f4a600d0475b2b31486ba8ae103" prot="public" static="no">
        <name>UPDATE_ROW_TARGET_ENTRIES</name>
        <param><defname>INDEX</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>TARGET</defname></param>
        <initializer>UPDATE_ROW_TARGET_ENTRIES_BASE(INDEX, NAME, TARGET)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="246" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="246" bodyend="247"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1aeb3ce8b56c2ce3533d928b6eef5f080b" prot="public" static="no">
        <name>UPDATE_ROW_VALUE_TARGET_ENTRIES_BASE</name>
        <param><defname>INDEX</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_U8, NAME, uint8_t), \
UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_I8, NAME, int8_t), \
UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_U16, NAME, uint16_t), \
UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_I16, NAME, int16_t), \
UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_U32, NAME, uint32_t), \
UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_I32, NAME, int32_t), \
UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_U64, NAME, uint64_t), \
UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_I64, NAME, int64_t), \
UPDATE_ROW_VALUE_ENTRY_VALUE(MAX_FORMATS * (INDEX) + ML_ARRAY_FORMAT_ANY, NAME)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="249" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="249" bodyend="258"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1abacaec585624ccfe91bb6a9aed3bbd75" prot="public" static="no">
        <name>UPDATE_ROW_VALUE_TARGET_ENTRIES</name>
        <param><defname>INDEX</defname></param>
        <param><defname>NAME</defname></param>
        <initializer>UPDATE_ROW_VALUE_TARGET_ENTRIES_BASE(INDEX, NAME)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="260" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="260" bodyend="261"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1aade3538de678f55813e05eaf5d49c072" prot="public" static="no">
        <name>UPDATE_ROW_OPS_ENTRIES_BASE</name>
        <param><defname>NAME</defname></param>
        <initializer>UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_U8, NAME, uint8_t), \
UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_I8, NAME, int8_t), \
UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_U16, NAME, uint16_t), \
UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_I16, NAME, int16_t), \
UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_U32, NAME, uint32_t), \
UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_I32, NAME, int32_t), \
UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_U64, NAME, uint64_t), \
UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_I64, NAME, int64_t), \
UPDATE_ROW_VALUE_TARGET_ENTRIES(ML_ARRAY_FORMAT_ANY, NAME)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="263" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="263" bodyend="272"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1af3966bb7d67f37274e7ab075639728c1" prot="public" static="no">
        <name>UPDATE_ROW_OPS_ENTRIES</name>
        <param><defname>NAME</defname></param>
        <initializer>UPDATE_ROW_OPS_ENTRIES_BASE(NAME)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="274" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="274" bodyend="275"/>
      </memberdef>
      <memberdef kind="define" id="update__impl__integer_8h_1ad140d97d300ff6a2825fdd75b92816e5" prot="public" static="no">
        <name>UPDATE_FNS</name>
        <param><defname>TITLE</defname></param>
        <param><defname>NAME</defname></param>
        <param><defname>OP</defname></param>
        <param><defname>OP2</defname></param>
        <initializer>	UPDATE_ROW_OPS_IMPL(NAME, OP, OP2) \
\
update_row_fn_t Update ## TITLE ## RowFns[MAX_FORMATS * MAX_FORMATS] = { \
	UPDATE_ROW_OPS_ENTRIES(NAME) \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="279" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="279" bodyend="284"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="update__impl__integer_8h_1afff5df2795a83cd6de48f8ad0a1dfe80" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* update_row_fn_t) (ml_array_dimension_t *TargetDimension, char *TargetData, ml_array_dimension_t *SourceDimension, char *SourceData)</definition>
        <argsstring>)(ml_array_dimension_t *TargetDimension, char *TargetData, ml_array_dimension_t *SourceDimension, char *SourceData)</argsstring>
        <name>update_row_fn_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/array/update_impl_integer.h" line="277" column="9" bodyfile="src/array/update_impl_integer.h" bodystart="277" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;../ml_array.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE(OP,<sp/>TARGET,<sp/>SOURCE)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="4"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typeof(TARGET)<sp/>_Target<sp/>=<sp/>TARGET;<sp/>\</highlight></codeline>
<codeline lineno="5"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>typeof(SOURCE)<sp/>_Source<sp/>=<sp/>SOURCE;<sp/>\</highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>*_Target<sp/>=<sp/>OP(*_Target,<sp/>_Source);<sp/>\</highlight></codeline>
<codeline lineno="7"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_IMPL(NAME,<sp/>OP,<sp/>TARGET,<sp/>SOURCE)<sp/>\</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor">void<sp/>NAME<sp/>##<sp/>_row_<sp/>##<sp/>TARGET<sp/>##<sp/>_<sp/>##<sp/>SOURCE(ml_array_dimension_t<sp/>*TargetDimension,<sp/>char<sp/>*TargetData,<sp/>ml_array_dimension_t<sp/>*SourceDimension,<sp/>char<sp/>*SourceData)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Size<sp/>=<sp/>TargetDimension-&gt;Size;<sp/>\</highlight></codeline>
<codeline lineno="13"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(TargetDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*TargetIndices<sp/>=<sp/>TargetDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SourceDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*SourceIndices<sp/>=<sp/>SourceDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UPDATE(OP,<sp/>(TARGET<sp/>*)(TargetData<sp/>+<sp/>TargetIndices[I]<sp/>*<sp/>TargetDimension-&gt;Stride),<sp/>*(SOURCE<sp/>*)(SourceData<sp/>+<sp/>SourceIndices[I]<sp/>*<sp/>SourceDimension-&gt;Stride));<sp/>\</highlight></codeline>
<codeline lineno="19"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="20"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="21"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>SourceStride<sp/>=<sp/>SourceDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="23"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UPDATE(OP,<sp/>(TARGET<sp/>*)(TargetData<sp/>+<sp/>TargetIndices[I]<sp/>*<sp/>TargetDimension-&gt;Stride),<sp/>*(SOURCE<sp/>*)SourceData);<sp/>\</highlight></codeline>
<codeline lineno="24"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceData<sp/>+=<sp/>SourceStride;<sp/>\</highlight></codeline>
<codeline lineno="25"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="27"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="28"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>TargetStride<sp/>=<sp/>TargetDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="29"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SourceDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*SourceIndices<sp/>=<sp/>SourceDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UPDATE(OP,<sp/>(TARGET<sp/>*)TargetData,<sp/>*(SOURCE<sp/>*)(SourceData<sp/>+<sp/>SourceIndices[I]<sp/>*<sp/>SourceDimension-&gt;Stride));<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetData<sp/>+=<sp/>TargetStride;<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>SourceStride<sp/>=<sp/>SourceDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>Size;<sp/>--I<sp/>&gt;=<sp/>0;)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UPDATE(OP,<sp/>(TARGET<sp/>*)TargetData,<sp/>*(SOURCE<sp/>*)SourceData);<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetData<sp/>+=<sp/>TargetStride;<sp/>\</highlight></codeline>
<codeline lineno="40"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceData<sp/>+=<sp/>SourceStride;<sp/>\</highlight></codeline>
<codeline lineno="41"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="42"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="43"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="44"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ml_number(X)<sp/>_Generic(X,<sp/>ml_value_t<sp/>*:<sp/>ml_nop,<sp/>double:<sp/>ml_real,<sp/>default:<sp/>ml_integer)(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_VALUE_IMPL(NAME,<sp/>OP,<sp/>SOURCE)<sp/>\</highlight></codeline>
<codeline lineno="49"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="50"><highlight class="preprocessor">void<sp/>NAME<sp/>##<sp/>_row_any_<sp/>##<sp/>SOURCE(ml_array_dimension_t<sp/>*TargetDimension,<sp/>char<sp/>*TargetData,<sp/>ml_array_dimension_t<sp/>*SourceDimension,<sp/>char<sp/>*SourceData)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="51"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Size<sp/>=<sp/>TargetDimension-&gt;Size;<sp/>\</highlight></codeline>
<codeline lineno="52"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(TargetDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="53"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*TargetIndices<sp/>=<sp/>TargetDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="54"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SourceDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*SourceIndices<sp/>=<sp/>SourceDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>**Target<sp/>=<sp/>(ml_value_t<sp/>**)(TargetData<sp/>+<sp/>TargetIndices[I]<sp/>*<sp/>TargetDimension-&gt;Stride);<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>*Source<sp/>=<sp/>ml_number(*(SOURCE<sp/>*)(SourceData<sp/>+<sp/>SourceIndices[I]<sp/>*<sp/>SourceDimension-&gt;Stride));<sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Target<sp/>=<sp/>OP(*Target,<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="61"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="62"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>SourceStride<sp/>=<sp/>SourceDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="63"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="64"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>**Target<sp/>=<sp/>(ml_value_t<sp/>**)(TargetData<sp/>+<sp/>TargetIndices[I]<sp/>*<sp/>TargetDimension-&gt;Stride);<sp/>\</highlight></codeline>
<codeline lineno="65"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>*Source<sp/>=<sp/>ml_number(*(SOURCE<sp/>*)SourceData);<sp/>\</highlight></codeline>
<codeline lineno="66"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Target<sp/>=<sp/>OP(*Target,<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="67"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceData<sp/>+=<sp/>SourceStride;<sp/>\</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="69"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="70"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="71"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>TargetStride<sp/>=<sp/>TargetDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="72"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SourceDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="73"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*SourceIndices<sp/>=<sp/>SourceDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="74"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="75"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>**Target<sp/>=<sp/>(ml_value_t<sp/>**)TargetData;<sp/>\</highlight></codeline>
<codeline lineno="76"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>*Source<sp/>=<sp/>ml_number(*(SOURCE<sp/>*)(SourceData<sp/>+<sp/>SourceIndices[I]<sp/>*<sp/>SourceDimension-&gt;Stride));<sp/>\</highlight></codeline>
<codeline lineno="77"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Target<sp/>=<sp/>OP(*Target,<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="78"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetData<sp/>+=<sp/>TargetStride;<sp/>\</highlight></codeline>
<codeline lineno="79"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="80"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>SourceStride<sp/>=<sp/>SourceDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="82"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>Size;<sp/>--I<sp/>&gt;=<sp/>0;)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="83"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>**Target<sp/>=<sp/>(ml_value_t<sp/>**)TargetData;<sp/>\</highlight></codeline>
<codeline lineno="84"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>*Source<sp/>=<sp/>ml_number(*(SOURCE<sp/>*)SourceData);<sp/>\</highlight></codeline>
<codeline lineno="85"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Target<sp/>=<sp/>OP(*Target,<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="86"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetData<sp/>+=<sp/>TargetStride;<sp/>\</highlight></codeline>
<codeline lineno="87"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceData<sp/>+=<sp/>SourceStride;<sp/>\</highlight></codeline>
<codeline lineno="88"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="89"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="90"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="91"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ml_number_value(T,<sp/>X)<sp/>_Generic(T,<sp/>double:<sp/>ml_real_value,<sp/>default:<sp/>ml_integer_value)(X)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_IMPL_VALUE(NAME,<sp/>OP,<sp/>TARGET)<sp/>\</highlight></codeline>
<codeline lineno="96"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="97"><highlight class="preprocessor">void<sp/>NAME<sp/>##<sp/>_row_<sp/>##<sp/>TARGET<sp/>##<sp/>_any(ml_array_dimension_t<sp/>*TargetDimension,<sp/>char<sp/>*TargetData,<sp/>ml_array_dimension_t<sp/>*SourceDimension,<sp/>char<sp/>*SourceData)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Size<sp/>=<sp/>TargetDimension-&gt;Size;<sp/>\</highlight></codeline>
<codeline lineno="99"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(TargetDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="100"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*TargetIndices<sp/>=<sp/>TargetDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="101"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SourceDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="102"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*SourceIndices<sp/>=<sp/>SourceDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="103"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="104"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TARGET<sp/>Source<sp/>=<sp/>ml_number_value((TARGET)0,<sp/>*(ml_value_t<sp/>**)(SourceData<sp/>+<sp/>SourceIndices[I]<sp/>*<sp/>SourceDimension-&gt;Stride));<sp/>\</highlight></codeline>
<codeline lineno="105"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UPDATE(OP,<sp/>(TARGET<sp/>*)(TargetData<sp/>+<sp/>TargetIndices[I]<sp/>*<sp/>TargetDimension-&gt;Stride),<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="106"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="107"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="108"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>SourceStride<sp/>=<sp/>SourceDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="110"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TARGET<sp/>Source<sp/>=<sp/>ml_number_value((TARGET)0,<sp/>*(ml_value_t<sp/>**)SourceData);<sp/>\</highlight></codeline>
<codeline lineno="111"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UPDATE(OP,<sp/>(TARGET<sp/>*)(TargetData<sp/>+<sp/>TargetIndices[I]<sp/>*<sp/>TargetDimension-&gt;Stride),<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceData<sp/>+=<sp/>SourceStride;<sp/>\</highlight></codeline>
<codeline lineno="113"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="114"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="115"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="116"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>TargetStride<sp/>=<sp/>TargetDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SourceDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*SourceIndices<sp/>=<sp/>SourceDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TARGET<sp/>Source<sp/>=<sp/>ml_number_value((TARGET)0,<sp/>*(ml_value_t<sp/>**)(SourceData<sp/>+<sp/>SourceIndices[I]<sp/>*<sp/>SourceDimension-&gt;Stride));<sp/>\</highlight></codeline>
<codeline lineno="121"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UPDATE(OP,<sp/>(TARGET<sp/>*)TargetData,<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetData<sp/>+=<sp/>TargetStride;<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="124"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>SourceStride<sp/>=<sp/>SourceDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="126"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>Size;<sp/>--I<sp/>&gt;=<sp/>0;)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TARGET<sp/>Source<sp/>=<sp/>ml_number_value((TARGET)0,<sp/>*(ml_value_t<sp/>**)SourceData);<sp/>\</highlight></codeline>
<codeline lineno="128"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>UPDATE(OP,<sp/>(TARGET<sp/>*)TargetData,<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetData<sp/>+=<sp/>TargetStride;<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceData<sp/>+=<sp/>SourceStride;<sp/>\</highlight></codeline>
<codeline lineno="131"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="134"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_VALUE_IMPL_VALUE(NAME,<sp/>OP)<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor">void<sp/>NAME<sp/>##<sp/>_row_any_any(ml_array_dimension_t<sp/>*TargetDimension,<sp/>char<sp/>*TargetData,<sp/>ml_array_dimension_t<sp/>*SourceDimension,<sp/>char<sp/>*SourceData)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>int<sp/>Size<sp/>=<sp/>TargetDimension-&gt;Size;<sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(TargetDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="141"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*TargetIndices<sp/>=<sp/>TargetDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SourceDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*SourceIndices<sp/>=<sp/>SourceDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>*Source<sp/>=<sp/>*(ml_value_t<sp/>**)(SourceData<sp/>+<sp/>SourceIndices[I]<sp/>*<sp/>SourceDimension-&gt;Stride);<sp/>\</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>**Target<sp/>=<sp/>(ml_value_t<sp/>**)(TargetData<sp/>+<sp/>TargetIndices[I]<sp/>*<sp/>TargetDimension-&gt;Stride);<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Target<sp/>=<sp/>OP(*Target,<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>SourceStride<sp/>=<sp/>SourceDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>*Source<sp/>=<sp/>*(ml_value_t<sp/>**)SourceData;<sp/>\</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>**Target<sp/>=<sp/>(ml_value_t<sp/>**)(TargetData<sp/>+<sp/>TargetIndices[I]<sp/>*<sp/>TargetDimension-&gt;Stride);<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Target<sp/>=<sp/>OP(*Target,<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="155"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceData<sp/>+=<sp/>SourceStride;<sp/>\</highlight></codeline>
<codeline lineno="156"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="157"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="158"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="159"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>TargetStride<sp/>=<sp/>TargetDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(SourceDimension-&gt;Indices)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="161"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int<sp/>*SourceIndices<sp/>=<sp/>SourceDimension-&gt;Indices;<sp/>\</highlight></codeline>
<codeline lineno="162"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>0;<sp/>I<sp/>&lt;<sp/>Size;<sp/>++I)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>*Source<sp/>=<sp/>*(ml_value_t<sp/>**)(SourceData<sp/>+<sp/>SourceIndices[I]<sp/>*<sp/>SourceDimension-&gt;Stride);<sp/>\</highlight></codeline>
<codeline lineno="164"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>**Target<sp/>=<sp/>(ml_value_t<sp/>**)TargetData;<sp/>\</highlight></codeline>
<codeline lineno="165"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Target<sp/>=<sp/>OP(*Target,<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="166"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetData<sp/>+=<sp/>TargetStride;<sp/>\</highlight></codeline>
<codeline lineno="167"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="168"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>else<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>SourceStride<sp/>=<sp/>SourceDimension-&gt;Stride;<sp/>\</highlight></codeline>
<codeline lineno="170"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>I<sp/>=<sp/>Size;<sp/>--I<sp/>&gt;=<sp/>0;)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="171"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>*Source<sp/>=<sp/>*(ml_value_t<sp/>**)SourceData;<sp/>\</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ml_value_t<sp/>**Target<sp/>=<sp/>(ml_value_t<sp/>**)TargetData;<sp/>\</highlight></codeline>
<codeline lineno="173"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*Target<sp/>=<sp/>OP(*Target,<sp/>Source);<sp/>\</highlight></codeline>
<codeline lineno="174"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>TargetData<sp/>+=<sp/>TargetStride;<sp/>\</highlight></codeline>
<codeline lineno="175"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SourceData<sp/>+=<sp/>SourceStride;<sp/>\</highlight></codeline>
<codeline lineno="176"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="177"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="178"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="179"><highlight class="preprocessor">}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_TARGET_IMPL_BASE(NAME,<sp/>OP,<sp/>TARGET)<sp/>\</highlight></codeline>
<codeline lineno="182"><highlight class="preprocessor">UPDATE_ROW_IMPL(NAME,<sp/>OP,<sp/>TARGET,<sp/>uint8_t)<sp/>\</highlight></codeline>
<codeline lineno="183"><highlight class="preprocessor">UPDATE_ROW_IMPL(NAME,<sp/>OP,<sp/>TARGET,<sp/>int8_t)<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor">UPDATE_ROW_IMPL(NAME,<sp/>OP,<sp/>TARGET,<sp/>uint16_t)<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor">UPDATE_ROW_IMPL(NAME,<sp/>OP,<sp/>TARGET,<sp/>int16_t)<sp/>\</highlight></codeline>
<codeline lineno="186"><highlight class="preprocessor">UPDATE_ROW_IMPL(NAME,<sp/>OP,<sp/>TARGET,<sp/>uint32_t)<sp/>\</highlight></codeline>
<codeline lineno="187"><highlight class="preprocessor">UPDATE_ROW_IMPL(NAME,<sp/>OP,<sp/>TARGET,<sp/>int32_t)<sp/>\</highlight></codeline>
<codeline lineno="188"><highlight class="preprocessor">UPDATE_ROW_IMPL(NAME,<sp/>OP,<sp/>TARGET,<sp/>uint64_t)<sp/>\</highlight></codeline>
<codeline lineno="189"><highlight class="preprocessor">UPDATE_ROW_IMPL(NAME,<sp/>OP,<sp/>TARGET,<sp/>int64_t)<sp/>\</highlight></codeline>
<codeline lineno="190"><highlight class="preprocessor">UPDATE_ROW_IMPL_VALUE(NAME,<sp/>OP,<sp/>TARGET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_TARGET_IMPL(NAME,<sp/>OP,<sp/>TARGET)<sp/>\</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor">UPDATE_ROW_TARGET_IMPL_BASE(NAME,<sp/>OP,<sp/>TARGET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_TARGET_VALUE_IMPL_BASE(NAME,<sp/>OP)<sp/>\</highlight></codeline>
<codeline lineno="196"><highlight class="preprocessor">UPDATE_ROW_VALUE_IMPL(NAME,<sp/>OP,<sp/>uint8_t)<sp/>\</highlight></codeline>
<codeline lineno="197"><highlight class="preprocessor">UPDATE_ROW_VALUE_IMPL(NAME,<sp/>OP,<sp/>int8_t)<sp/>\</highlight></codeline>
<codeline lineno="198"><highlight class="preprocessor">UPDATE_ROW_VALUE_IMPL(NAME,<sp/>OP,<sp/>uint16_t)<sp/>\</highlight></codeline>
<codeline lineno="199"><highlight class="preprocessor">UPDATE_ROW_VALUE_IMPL(NAME,<sp/>OP,<sp/>int16_t)<sp/>\</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor">UPDATE_ROW_VALUE_IMPL(NAME,<sp/>OP,<sp/>uint32_t)<sp/>\</highlight></codeline>
<codeline lineno="201"><highlight class="preprocessor">UPDATE_ROW_VALUE_IMPL(NAME,<sp/>OP,<sp/>int32_t)<sp/>\</highlight></codeline>
<codeline lineno="202"><highlight class="preprocessor">UPDATE_ROW_VALUE_IMPL(NAME,<sp/>OP,<sp/>uint64_t)<sp/>\</highlight></codeline>
<codeline lineno="203"><highlight class="preprocessor">UPDATE_ROW_VALUE_IMPL(NAME,<sp/>OP,<sp/>int64_t)<sp/>\</highlight></codeline>
<codeline lineno="204"><highlight class="preprocessor">UPDATE_ROW_VALUE_IMPL_VALUE(NAME,<sp/>OP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_TARGET_VALUE_IMPL(NAME,<sp/>OP)<sp/>\</highlight></codeline>
<codeline lineno="207"><highlight class="preprocessor">UPDATE_ROW_TARGET_VALUE_IMPL_BASE(NAME,<sp/>OP)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_OPS_IMPL_BASE(NAME,<sp/>OP,<sp/>OP2)<sp/>\</highlight></codeline>
<codeline lineno="210"><highlight class="preprocessor">UPDATE_ROW_TARGET_IMPL(NAME,<sp/>OP,<sp/>uint8_t)<sp/>\</highlight></codeline>
<codeline lineno="211"><highlight class="preprocessor">UPDATE_ROW_TARGET_IMPL(NAME,<sp/>OP,<sp/>int8_t)<sp/>\</highlight></codeline>
<codeline lineno="212"><highlight class="preprocessor">UPDATE_ROW_TARGET_IMPL(NAME,<sp/>OP,<sp/>uint16_t)<sp/>\</highlight></codeline>
<codeline lineno="213"><highlight class="preprocessor">UPDATE_ROW_TARGET_IMPL(NAME,<sp/>OP,<sp/>int16_t)<sp/>\</highlight></codeline>
<codeline lineno="214"><highlight class="preprocessor">UPDATE_ROW_TARGET_IMPL(NAME,<sp/>OP,<sp/>uint32_t)<sp/>\</highlight></codeline>
<codeline lineno="215"><highlight class="preprocessor">UPDATE_ROW_TARGET_IMPL(NAME,<sp/>OP,<sp/>int32_t)<sp/>\</highlight></codeline>
<codeline lineno="216"><highlight class="preprocessor">UPDATE_ROW_TARGET_IMPL(NAME,<sp/>OP,<sp/>uint64_t)<sp/>\</highlight></codeline>
<codeline lineno="217"><highlight class="preprocessor">UPDATE_ROW_TARGET_IMPL(NAME,<sp/>OP,<sp/>int64_t)<sp/>\</highlight></codeline>
<codeline lineno="218"><highlight class="preprocessor">UPDATE_ROW_TARGET_VALUE_IMPL(NAME,<sp/>OP2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_OPS_IMPL(NAME,<sp/>OP,<sp/>OP2)<sp/>\</highlight></codeline>
<codeline lineno="221"><highlight class="preprocessor">UPDATE_ROW_OPS_IMPL_BASE(NAME,<sp/>OP,<sp/>OP2)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_ENTRY(INDEX,<sp/>NAME,<sp/>TARGET,<sp/>SOURCE)<sp/>\</highlight></codeline>
<codeline lineno="224"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>[INDEX]<sp/>=<sp/>NAME<sp/>##<sp/>_row_<sp/>##<sp/>TARGET<sp/>##<sp/>_<sp/>##<sp/>SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_VALUE_ENTRY(INDEX,<sp/>NAME,<sp/>SOURCE)<sp/>\</highlight></codeline>
<codeline lineno="227"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>[INDEX]<sp/>=<sp/>NAME<sp/>##<sp/>_row_any_<sp/>##<sp/>SOURCE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_ENTRY_VALUE(INDEX,<sp/>NAME,<sp/>TARGET)<sp/>\</highlight></codeline>
<codeline lineno="230"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>[INDEX]<sp/>=<sp/>NAME<sp/>##<sp/>_row_<sp/>##<sp/>TARGET<sp/>##<sp/>_any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_VALUE_ENTRY_VALUE(INDEX,<sp/>NAME)<sp/>\</highlight></codeline>
<codeline lineno="233"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>[INDEX]<sp/>=<sp/>NAME<sp/>##<sp/>_row_any_any</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_TARGET_ENTRIES_BASE(INDEX,<sp/>NAME,<sp/>TARGET)<sp/>\</highlight></codeline>
<codeline lineno="236"><highlight class="preprocessor">UPDATE_ROW_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_U8,<sp/>NAME,<sp/>TARGET,<sp/>uint8_t),<sp/>\</highlight></codeline>
<codeline lineno="237"><highlight class="preprocessor">UPDATE_ROW_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_I8,<sp/>NAME,<sp/>TARGET,<sp/>int8_t),<sp/>\</highlight></codeline>
<codeline lineno="238"><highlight class="preprocessor">UPDATE_ROW_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_U16,<sp/>NAME,<sp/>TARGET,<sp/>uint16_t),<sp/>\</highlight></codeline>
<codeline lineno="239"><highlight class="preprocessor">UPDATE_ROW_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_I16,<sp/>NAME,<sp/>TARGET,<sp/>int16_t),<sp/>\</highlight></codeline>
<codeline lineno="240"><highlight class="preprocessor">UPDATE_ROW_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_U32,<sp/>NAME,<sp/>TARGET,<sp/>uint32_t),<sp/>\</highlight></codeline>
<codeline lineno="241"><highlight class="preprocessor">UPDATE_ROW_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_I32,<sp/>NAME,<sp/>TARGET,<sp/>int32_t),<sp/>\</highlight></codeline>
<codeline lineno="242"><highlight class="preprocessor">UPDATE_ROW_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_U64,<sp/>NAME,<sp/>TARGET,<sp/>uint64_t),<sp/>\</highlight></codeline>
<codeline lineno="243"><highlight class="preprocessor">UPDATE_ROW_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_I64,<sp/>NAME,<sp/>TARGET,<sp/>int64_t),<sp/>\</highlight></codeline>
<codeline lineno="244"><highlight class="preprocessor">UPDATE_ROW_ENTRY_VALUE(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_ANY,<sp/>NAME,<sp/>TARGET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_TARGET_ENTRIES(INDEX,<sp/>NAME,<sp/>TARGET)<sp/>\</highlight></codeline>
<codeline lineno="247"><highlight class="preprocessor">UPDATE_ROW_TARGET_ENTRIES_BASE(INDEX,<sp/>NAME,<sp/>TARGET)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_VALUE_TARGET_ENTRIES_BASE(INDEX,<sp/>NAME)<sp/>\</highlight></codeline>
<codeline lineno="250"><highlight class="preprocessor">UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_U8,<sp/>NAME,<sp/>uint8_t),<sp/>\</highlight></codeline>
<codeline lineno="251"><highlight class="preprocessor">UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_I8,<sp/>NAME,<sp/>int8_t),<sp/>\</highlight></codeline>
<codeline lineno="252"><highlight class="preprocessor">UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_U16,<sp/>NAME,<sp/>uint16_t),<sp/>\</highlight></codeline>
<codeline lineno="253"><highlight class="preprocessor">UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_I16,<sp/>NAME,<sp/>int16_t),<sp/>\</highlight></codeline>
<codeline lineno="254"><highlight class="preprocessor">UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_U32,<sp/>NAME,<sp/>uint32_t),<sp/>\</highlight></codeline>
<codeline lineno="255"><highlight class="preprocessor">UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_I32,<sp/>NAME,<sp/>int32_t),<sp/>\</highlight></codeline>
<codeline lineno="256"><highlight class="preprocessor">UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_U64,<sp/>NAME,<sp/>uint64_t),<sp/>\</highlight></codeline>
<codeline lineno="257"><highlight class="preprocessor">UPDATE_ROW_VALUE_ENTRY(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_I64,<sp/>NAME,<sp/>int64_t),<sp/>\</highlight></codeline>
<codeline lineno="258"><highlight class="preprocessor">UPDATE_ROW_VALUE_ENTRY_VALUE(MAX_FORMATS<sp/>*<sp/>(INDEX)<sp/>+<sp/>ML_ARRAY_FORMAT_ANY,<sp/>NAME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_VALUE_TARGET_ENTRIES(INDEX,<sp/>NAME)<sp/>\</highlight></codeline>
<codeline lineno="261"><highlight class="preprocessor">UPDATE_ROW_VALUE_TARGET_ENTRIES_BASE(INDEX,<sp/>NAME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_OPS_ENTRIES_BASE(NAME)<sp/>\</highlight></codeline>
<codeline lineno="264"><highlight class="preprocessor">UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_U8,<sp/>NAME,<sp/>uint8_t),<sp/>\</highlight></codeline>
<codeline lineno="265"><highlight class="preprocessor">UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_I8,<sp/>NAME,<sp/>int8_t),<sp/>\</highlight></codeline>
<codeline lineno="266"><highlight class="preprocessor">UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_U16,<sp/>NAME,<sp/>uint16_t),<sp/>\</highlight></codeline>
<codeline lineno="267"><highlight class="preprocessor">UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_I16,<sp/>NAME,<sp/>int16_t),<sp/>\</highlight></codeline>
<codeline lineno="268"><highlight class="preprocessor">UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_U32,<sp/>NAME,<sp/>uint32_t),<sp/>\</highlight></codeline>
<codeline lineno="269"><highlight class="preprocessor">UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_I32,<sp/>NAME,<sp/>int32_t),<sp/>\</highlight></codeline>
<codeline lineno="270"><highlight class="preprocessor">UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_U64,<sp/>NAME,<sp/>uint64_t),<sp/>\</highlight></codeline>
<codeline lineno="271"><highlight class="preprocessor">UPDATE_ROW_TARGET_ENTRIES(ML_ARRAY_FORMAT_I64,<sp/>NAME,<sp/>int64_t),<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor">UPDATE_ROW_VALUE_TARGET_ENTRIES(ML_ARRAY_FORMAT_ANY,<sp/>NAME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_ROW_OPS_ENTRIES(NAME)<sp/>\</highlight></codeline>
<codeline lineno="275"><highlight class="preprocessor">UPDATE_ROW_OPS_ENTRIES_BASE(NAME)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*update_row_fn_t)(<ref refid="structml__array__dimension__t" kindref="compound">ml_array_dimension_t</ref><sp/>*TargetDimension,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*TargetData,<sp/><ref refid="structml__array__dimension__t" kindref="compound">ml_array_dimension_t</ref><sp/>*SourceDimension,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*SourceData);</highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>UPDATE_FNS(TITLE,<sp/>NAME,<sp/>OP,<sp/>OP2)<sp/>\</highlight></codeline>
<codeline lineno="280"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UPDATE_ROW_OPS_IMPL(NAME,<sp/>OP,<sp/>OP2)<sp/>\</highlight></codeline>
<codeline lineno="281"><highlight class="preprocessor">\</highlight></codeline>
<codeline lineno="282"><highlight class="preprocessor">update_row_fn_t<sp/>Update<sp/>##<sp/>TITLE<sp/>##<sp/>RowFns[MAX_FORMATS<sp/>*<sp/>MAX_FORMATS]<sp/>=<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="283"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>UPDATE_ROW_OPS_ENTRIES(NAME)<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor">}</highlight></codeline>
    </programlisting>
    <location file="src/array/update_impl_integer.h"/>
  </compounddef>
</doxygen>
