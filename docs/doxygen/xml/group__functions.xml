<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.14.0" xml:lang="en-US">
  <compounddef id="group__functions" kind="group">
    <compoundname>functions</compoundname>
    <title>Functions</title>
    <innerclass refid="structml__cfunction__t" prot="public">ml_cfunction_t</innerclass>
    <innerclass refid="structml__cfunctionx__t" prot="public">ml_cfunctionx_t</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__functions_1ga9424921faaafd3d4e804c5804a2efab4" prot="public" static="no">
        <type>struct ml_cfunction_t</type>
        <definition>typedef struct ml_cfunction_t ml_cfunction_t</definition>
        <argsstring></argsstring>
        <name>ml_cfunction_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="366" column="29" bodyfile="src/ml_types.h" bodystart="366" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__functions_1gae875c856b22e3a3b05016e380af6a93e" prot="public" static="no">
        <type>struct ml_cfunctionx_t</type>
        <definition>typedef struct ml_cfunctionx_t ml_cfunctionx_t</definition>
        <argsstring></argsstring>
        <name>ml_cfunctionx_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="367" column="30" bodyfile="src/ml_types.h" bodystart="367" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="group__functions_1ga15d6b7916ced3aab313248fed81c9695" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLFunctionT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLFunctionT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="362" column="18" declfile="src/ml_types.h" declline="362" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__functions_1ga187cadc2de67390b8bd8696956cc4f29" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLCFunctionT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLCFunctionT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="385" column="18" declfile="src/ml_types.h" declline="385" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__functions_1gad0ee7eaae9915af04f83c4e148ec1988" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLCFunctionXT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLCFunctionXT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="386" column="18" declfile="src/ml_types.h" declline="386" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__functions_1ga5c079c2a6513e7195ce27c3e919208b2" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLCFunctionZT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLCFunctionZT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="387" column="18" declfile="src/ml_types.h" declline="387" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__functions_1ga1d077e9825cc62009cab8b7e370b8d29" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref></type>
        <definition>ml_cfunctionx_t MLCallCC[]</definition>
        <argsstring>[]</argsstring>
        <name>MLCallCC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="395" column="24" declfile="src/ml_types.h" declline="395" declcolumn="24"/>
      </memberdef>
      <memberdef kind="variable" id="group__functions_1gade0d764588e29192db86750e06ce0a36" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref></type>
        <definition>ml_cfunctionx_t MLMarkCC[]</definition>
        <argsstring>[]</argsstring>
        <name>MLMarkCC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="396" column="24" declfile="src/ml_types.h" declline="396" declcolumn="24"/>
      </memberdef>
      <memberdef kind="variable" id="group__functions_1gaf0455189014d9e906bdb2c506aa9b7c9" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref></type>
        <definition>ml_cfunctionx_t MLCallDC[]</definition>
        <argsstring>[]</argsstring>
        <name>MLCallDC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="397" column="24" declfile="src/ml_types.h" declline="397" declcolumn="24"/>
      </memberdef>
      <memberdef kind="variable" id="group__functions_1ga5dd4db17549f9692a6fe17df079ced10" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref></type>
        <definition>ml_cfunctionx_t MLSwapCC[]</definition>
        <argsstring>[]</argsstring>
        <name>MLSwapCC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="398" column="24" declfile="src/ml_types.h" declline="398" declcolumn="24"/>
      </memberdef>
      <memberdef kind="variable" id="group__functions_1ga97bff54161bb0f06529470eddf5206f3" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLContextKeyT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLContextKeyT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="400" column="18" declfile="src/ml_types.h" declline="400" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__functions_1gabb8f52b07c29d2a46068f2af4cc3ede3" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__cfunction__t" kindref="compound">ml_cfunction_t</ref></type>
        <definition>ml_cfunction_t MLContextKey[]</definition>
        <argsstring>[]</argsstring>
        <name>MLContextKey</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="401" column="23" declfile="src/ml_types.h" declline="401" declcolumn="23"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__functions_1gaaa4156156c384aba904c797a03b7be8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int ml_function_source</definition>
        <argsstring>(ml_value_t *Value, const char **Source, int *Line)</argsstring>
        <name>ml_function_source</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type>const char **</type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>Line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="364" column="5" declfile="src/ml_types.h" declline="364" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1ga9c81efd40288423d1e8acae51bd8c1f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunction</definition>
        <argsstring>(void *Data, ml_callback_t Function) __attribute__((malloc))</argsstring>
        <name>ml_cfunction</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callback_t</type>
          <declname>Function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="403" column="12" declfile="src/ml_types.h" declline="403" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1ga85482330069324ad9b5acc161e3a739b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunctionx</definition>
        <argsstring>(void *Data, ml_callbackx_t Function) __attribute__((malloc))</argsstring>
        <name>ml_cfunctionx</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="404" column="12" declfile="src/ml_types.h" declline="404" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1ga4c606af9bcd4be9134ba830494070b30" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunctionz</definition>
        <argsstring>(void *Data, ml_callbackx_t Function) __attribute__((malloc))</argsstring>
        <name>ml_cfunctionz</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="405" column="12" declfile="src/ml_types.h" declline="405" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1ga63d434a5689d1e2cfa7171d767fb1983" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunction2</definition>
        <argsstring>(void *Data, ml_callback_t Function, const char *Source, int Line) __attribute__((malloc))</argsstring>
        <name>ml_cfunction2</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callback_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="407" column="12" declfile="src/ml_types.h" declline="407" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1ga045f52290e1962be7119ae333be25d34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunctionx2</definition>
        <argsstring>(void *Data, ml_callbackx_t Function, const char *Source, int Line) __attribute__((malloc))</argsstring>
        <name>ml_cfunctionx2</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="408" column="12" declfile="src/ml_types.h" declline="408" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1ga0c74dca7163bb08568caf976ee5144c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_cfunctionz2</definition>
        <argsstring>(void *Data, ml_callbackx_t Function, const char *Source, int Line) __attribute__((malloc))</argsstring>
        <name>ml_cfunctionz2</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>Source</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Line</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="409" column="12" declfile="src/ml_types.h" declline="409" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1ga5a30ce9a92200e9d3e18ae5a5a192cf9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_return_nil</definition>
        <argsstring>(void *Data, int Count, ml_value_t **Args)</argsstring>
        <name>ml_return_nil</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="411" column="12" declfile="src/ml_types.h" declline="411" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1gaef83dd25fbabc95164ac704ad4244e1f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_identity</definition>
        <argsstring>(void *Data, int Count, ml_value_t **Args)</argsstring>
        <name>ml_identity</name>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="412" column="12" declfile="src/ml_types.h" declline="412" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1gabde60a890103e06ee3d8fab4a6df0a96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_partial_function</definition>
        <argsstring>(ml_value_t *Function, int Count) __attribute__((malloc))</argsstring>
        <name>ml_partial_function</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="414" column="12" declfile="src/ml_types.h" declline="414" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1ga97c922f87fe3993eca394ae1e0266447" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_partial_function_set</definition>
        <argsstring>(ml_value_t *Partial, size_t Index, ml_value_t *Value)</argsstring>
        <name>ml_partial_function_set</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Partial</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>Index</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="415" column="12" declfile="src/ml_types.h" declline="415" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__functions_1ga4f62c589ff1fd70d4cf009522b18ae06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_value_function</definition>
        <argsstring>(ml_value_t *Value)</argsstring>
        <name>ml_value_function</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="417" column="12" declfile="src/ml_types.h" declline="417" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__functions_1ga64bb1f6d0bbbcb9bea03819669d1604e" prot="public" static="no">
        <name>ML_CFUNCTION</name>
        <param><defname>NAME</defname></param>
        <param><defname>DATA</defname></param>
        <param><defname>CALLBACK</defname></param>
        <initializer>static <ref refid="structml__cfunction__t" kindref="compound">ml_cfunction_t</ref> NAME[1] = {{MLCFunctionT, CALLBACK, DATA, ML_CATEGORY, __LINE__}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="389" column="9" bodyfile="src/ml_types.h" bodystart="389" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga227b5050bc72d20694108268021a2ad7" prot="public" static="no">
        <name>ML_CFUNCTIONX</name>
        <param><defname>NAME</defname></param>
        <param><defname>DATA</defname></param>
        <param><defname>CALLBACK</defname></param>
        <initializer>static <ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref> NAME[1] = {{MLCFunctionXT, CALLBACK, DATA, ML_CATEGORY, __LINE__}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="391" column="9" bodyfile="src/ml_types.h" bodystart="391" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1gaa80dcf7e00158747ebd2f65ac926e560" prot="public" static="no">
        <name>ML_CFUNCTIONZ</name>
        <param><defname>NAME</defname></param>
        <param><defname>DATA</defname></param>
        <param><defname>CALLBACK</defname></param>
        <initializer>static <ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref> NAME[1] = {{MLCFunctionZT, CALLBACK, DATA, ML_CATEGORY, __LINE__}}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="393" column="9" bodyfile="src/ml_types.h" bodystart="393" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga235d8aeff01b3c172aa1c81027e7077e" prot="public" static="no">
        <name>ML_FUNCTION2</name>
        <param><defname>NAME</defname></param>
        <param><defname>FUNCTION</defname></param>
        <initializer>static <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *FUNCTION(void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args); \
\
<ref refid="structml__cfunction__t" kindref="compound">ml_cfunction_t</ref> NAME[1] = {{MLCFunctionT, FUNCTION, NULL, ML_CATEGORY, __LINE__}}; \
\
static <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *FUNCTION(void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="419" column="9" bodyfile="src/ml_types.h" bodystart="419" bodyend="423"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga366326b7a43a64ffd54ccc0d7ef1ac84" prot="public" static="no">
        <name>ML_FUNCTION</name>
        <param><defname>NAME</defname></param>
        <initializer>ML_FUNCTION2(NAME, CONCAT3(ml_cfunction_, __LINE__, __COUNTER__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="425" column="9" bodyfile="src/ml_types.h" bodystart="425" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga946e20842178f2a60afd3795b31852e7" prot="public" static="no">
        <name>ML_FUNCTIONX2</name>
        <param><defname>NAME</defname></param>
        <param><defname>FUNCTION</defname></param>
        <initializer>static void FUNCTION(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args); \
\
<ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref> NAME[1] = {{MLCFunctionXT, FUNCTION, NULL, ML_CATEGORY, __LINE__}}; \
\
static void FUNCTION(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="427" column="9" bodyfile="src/ml_types.h" bodystart="427" bodyend="431"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga11cfbf18216218691b5b11b903637fe7" prot="public" static="no">
        <name>ML_FUNCTIONX</name>
        <param><defname>NAME</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>ML_FUNCTIONX2(NAME, CONCAT3(ml_cfunctionx_, __LINE__, __COUNTER__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="433" column="9" bodyfile="src/ml_types.h" bodystart="433" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga74b53f7d868573993a1ed3638d242413" prot="public" static="no">
        <name>ML_FUNCTIONZ2</name>
        <param><defname>NAME</defname></param>
        <param><defname>FUNCTION</defname></param>
        <initializer>static void FUNCTION(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args); \
\
<ref refid="structml__cfunctionx__t" kindref="compound">ml_cfunctionx_t</ref> NAME[1] = {{MLCFunctionZT, FUNCTION, NULL, ML_CATEGORY, __LINE__}}; \
\
static void FUNCTION(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="435" column="9" bodyfile="src/ml_types.h" bodystart="435" bodyend="439"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1gadc70b5844bca6ec7333df752bdfb03cc" prot="public" static="no">
        <name>ML_FUNCTIONZ</name>
        <param><defname>NAME</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>ML_FUNCTIONZ2(NAME, CONCAT3(ml_cfunctionx_, __LINE__, __COUNTER__))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="441" column="9" bodyfile="src/ml_types.h" bodystart="441" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga74c32c04849a0ff149c3d98991af068c" prot="public" static="no">
        <name>ML_CHECK_ARG_TYPE</name>
        <param><defname>N</defname></param>
        <param><defname>TYPE</defname></param>
        <initializer>	if (!ml_is(Args[N], TYPE)) { \
		return ml_error(&quot;TypeError&quot;, &quot;Expected %s for argument %d&quot;, TYPE-&gt;Name, N + 1); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="443" column="9" bodyfile="src/ml_types.h" bodystart="443" bodyend="446"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga50ddfec988528d83059fe61515af315e" prot="public" static="no">
        <name>ML_CHECK_ARG_COUNT</name>
        <param><defname>N</defname></param>
        <initializer>	if (Count &lt; N) { \
		return ml_error(&quot;CallError&quot;, &quot;%d arguments required&quot;, N); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="448" column="9" bodyfile="src/ml_types.h" bodystart="448" bodyend="451"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga4dd6a2e5bd173dc26541be623c24b315" prot="public" static="no">
        <name>ML_CHECKX_ARG_TYPE</name>
        <param><defname>N</defname></param>
        <param><defname>TYPE</defname></param>
        <initializer>	if (!ml_is(Args[N], TYPE)) { \
		ML_ERROR(&quot;TypeError&quot;, &quot;Expected %s for argument %d&quot;, TYPE-&gt;Name, N + 1); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="453" column="9" bodyfile="src/ml_types.h" bodystart="453" bodyend="456"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1gaf190c16bb03f1d1ebb8ad401ecfb62dd" prot="public" static="no">
        <name>ML_CHECKX_ARG_COUNT</name>
        <param><defname>N</defname></param>
        <initializer>	if (Count &lt; N) { \
		ML_ERROR(&quot;CallError&quot;, &quot;%d arguments required&quot;, N); \
	}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="458" column="9" bodyfile="src/ml_types.h" bodystart="458" bodyend="461"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga2f678ebb79879b1de29563b9be033433" prot="public" static="no">
        <name>ML_CONTINUE</name>
        <param><defname>STATE</defname></param>
        <param><defname>VALUE</defname></param>
        <initializer>	{ \
	<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *__State = (<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *)(STATE); \
	<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *__Value = (<ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *)(VALUE); \
	return __State-&gt;run(__State, __Value); \
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="480" column="9" bodyfile="src/ml_types.h" bodystart="480" bodyend="484"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1ga072501492fac8511b802686bfe2ab31b" prot="public" static="no">
        <name>ML_RETURN</name>
        <param><defname>VALUE</defname></param>
        <initializer>ML_CONTINUE(Caller, VALUE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="490" column="9" bodyfile="src/ml_types.h" bodystart="490" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__functions_1gabf98d973af18ea2e26ac3f4c9ea309d7" prot="public" static="no">
        <name>ML_ERROR</name>
        <param><defname>ARGS...</defname></param>
        <initializer>ML_RETURN(ml_error(ARGS))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="491" column="9" bodyfile="src/ml_types.h" bodystart="491" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
