<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.13.2" xml:lang="en-US">
  <compounddef id="group__enums" kind="group">
    <compoundname>enums</compoundname>
    <title>Enums</title>
    <sectiondef kind="var">
      <memberdef kind="variable" id="group__enums_1ga55bf3f6aaa5344af28b9935aadf25e4f" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLEnumT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLEnumT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_object.h" line="106" column="18" declfile="src/ml_object.h" declline="106" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="group__enums_1gacd8ad4a915700a0019bf3bf99a8d849f" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLEnumValueT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLEnumValueT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_object.h" line="107" column="18" declfile="src/ml_object.h" declline="107" declcolumn="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__enums_1ga7a389a166525f8c68d3b799602c743a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
        <definition>ml_type_t * ml_enum</definition>
        <argsstring>(const char *Name,...)</argsstring>
        <name>ml_enum</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_object.h" line="109" column="11" declfile="src/ml_object.h" declline="109" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__enums_1ga5efee1e223a0f1f41d471ab8d21f42eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
        <definition>ml_type_t * ml_enum_cyclic</definition>
        <argsstring>(const char *Name,...)</argsstring>
        <name>ml_enum_cyclic</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_object.h" line="110" column="11" declfile="src/ml_object.h" declline="110" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__enums_1gaea1aaa2b592b7adac6cb39555aa03d9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
        <definition>ml_type_t * ml_enum2</definition>
        <argsstring>(const char *Name,...)</argsstring>
        <name>ml_enum2</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_object.h" line="111" column="11" declfile="src/ml_object.h" declline="111" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__enums_1gafdbc55ae9224493cdfca1a201cd264ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
        <definition>ml_type_t * ml_sub_enum</definition>
        <argsstring>(const char *TypeName, ml_type_t *Parent,...)</argsstring>
        <name>ml_sub_enum</name>
        <param>
          <type>const char *</type>
          <declname>TypeName</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Parent</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_object.h" line="112" column="11" declfile="src/ml_object.h" declline="112" declcolumn="11"/>
      </memberdef>
      <memberdef kind="function" id="group__enums_1ga5ee952e00c3e2798f9b27627aa07b6f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_enum_value</definition>
        <argsstring>(ml_type_t *Type, int64_t Enum)</argsstring>
        <name>ml_enum_value</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type</declname>
        </param>
        <param>
          <type>int64_t</type>
          <declname>Enum</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_object.h" line="114" column="12" declfile="src/ml_object.h" declline="114" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__enums_1ga2d0eb331616d6be8f24f342a6df9da64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int64_t</type>
        <definition>int64_t ml_enum_value_value</definition>
        <argsstring>(ml_value_t *Value)</argsstring>
        <name>ml_enum_value_value</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_object.h" line="115" column="9" declfile="src/ml_object.h" declline="115" declcolumn="9"/>
      </memberdef>
      <memberdef kind="function" id="group__enums_1ga0c31179e840acf0eea0e672ee7e69246" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ml_enum_value_name</definition>
        <argsstring>(ml_value_t *Value)</argsstring>
        <name>ml_enum_value_name</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_object.h" line="116" column="12" declfile="src/ml_object.h" declline="116" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
