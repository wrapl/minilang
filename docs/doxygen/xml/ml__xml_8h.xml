<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="ml__xml_8h" kind="file" language="C++">
    <compoundname>ml_xml.h</compoundname>
    <includes refid="minilang_8h" local="yes">minilang.h</includes>
    <incdepgraph>
      <node id="13">
        <label>inthash.h</label>
        <link refid="inthash_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>minilang.h</label>
        <link refid="minilang_8h_source"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>ml_compiler.h</label>
        <link refid="ml__compiler_8h_source"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>ml_runtime.h</label>
        <link refid="ml__runtime_8h_source"/>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="16" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>ml_types.h</label>
        <link refid="ml__types_8h_source"/>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
      <node id="1">
        <label>src/ml_xml.h</label>
        <link refid="ml__xml_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="12">
        <label>stringmap.h</label>
        <link refid="stringmap_8h_source"/>
      </node>
      <node id="16">
        <label>limits.h</label>
      </node>
      <node id="15">
        <label>ml_config.h</label>
      </node>
      <node id="6">
        <label>setjmp.h</label>
      </node>
      <node id="11">
        <label>stdarg.h</label>
      </node>
      <node id="14">
        <label>stdint.h</label>
      </node>
      <node id="9">
        <label>stdio.h</label>
      </node>
      <node id="3">
        <label>stdlib.h</label>
      </node>
      <node id="10">
        <label>string.h</label>
      </node>
      <node id="4">
        <label>unistd.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="ml__xml_8h_1aa5ea5ccf1cbaeef50e91bb24690ef36a" prot="public" static="no">
        <type>struct ml_xml_node_t</type>
        <definition>typedef struct ml_xml_node_t ml_xml_node_t</definition>
        <argsstring></argsstring>
        <name>ml_xml_node_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="16" column="28" bodyfile="src/ml_xml.h" bodystart="16" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="ml__xml_8h_1a123ddfd339dae5fa6aa82c0be4359add" prot="public" static="no">
        <type>struct ml_xml_element_t</type>
        <definition>typedef struct ml_xml_element_t ml_xml_element_t</definition>
        <argsstring></argsstring>
        <name>ml_xml_element_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="17" column="31" bodyfile="src/ml_xml.h" bodystart="17" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="ml__xml_8h_1ac8d8e97cab7e45c835d98e7bcbc049e2" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLXmlT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLXmlT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="12" column="18" declfile="src/ml_xml.h" declline="12" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="ml__xml_8h_1afad451d2ceb52ba2ade7d6b4e046bdef" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLXmlTextT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLXmlTextT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="13" column="18" declfile="src/ml_xml.h" declline="13" declcolumn="18"/>
      </memberdef>
      <memberdef kind="variable" id="ml__xml_8h_1abf5c44c796664aa71e32a8ec5623948a" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLXmlElementT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLXmlElementT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="14" column="18" declfile="src/ml_xml.h" declline="14" declcolumn="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="ml__xml_8h_1a60e2b4e006e6bb5018eaca5f48c7718c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_xml_init</definition>
        <argsstring>(stringmap_t *Globals)</argsstring>
        <name>ml_xml_init</name>
        <param>
          <type><ref refid="structstringmap__t" kindref="compound">stringmap_t</ref> *</type>
          <declname>Globals</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="10" column="6" declfile="src/ml_xml.h" declline="10" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1aba784fba580bd7881996390dd32f02ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ml_xml_element_t *</type>
        <definition>ml_xml_element_t * ml_xml_node_parent</definition>
        <argsstring>(ml_xml_node_t *Value)</argsstring>
        <name>ml_xml_node_parent</name>
        <param>
          <type>ml_xml_node_t *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="19" column="18" declfile="src/ml_xml.h" declline="19" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1ab467633362d8ef4fdedf2eddfa3eb805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ml_xml_node_t *</type>
        <definition>ml_xml_node_t * ml_xml_node_next</definition>
        <argsstring>(ml_xml_node_t *Value)</argsstring>
        <name>ml_xml_node_next</name>
        <param>
          <type>ml_xml_node_t *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="20" column="15" declfile="src/ml_xml.h" declline="20" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1ab644d60c6c078a985db42916dc40260c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ml_xml_node_t *</type>
        <definition>ml_xml_node_t * ml_xml_node_prev</definition>
        <argsstring>(ml_xml_node_t *Value)</argsstring>
        <name>ml_xml_node_prev</name>
        <param>
          <type>ml_xml_node_t *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="21" column="15" declfile="src/ml_xml.h" declline="21" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1a578a4fbca5d791e2c35ef2c9a88fc97c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_xml_element_tag</definition>
        <argsstring>(ml_xml_element_t *Value)</argsstring>
        <name>ml_xml_element_tag</name>
        <param>
          <type>ml_xml_element_t *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="23" column="12" declfile="src/ml_xml.h" declline="23" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1aec8dc9531fb6212a4dee3a70ab35a44b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_xml_element_attributes</definition>
        <argsstring>(ml_xml_element_t *Value)</argsstring>
        <name>ml_xml_element_attributes</name>
        <param>
          <type>ml_xml_element_t *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="24" column="12" declfile="src/ml_xml.h" declline="24" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1a2a51e5fb3ee131b6ab6f5fe237dd75a6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>size_t</type>
        <definition>size_t ml_xml_element_length</definition>
        <argsstring>(ml_xml_element_t *Value)</argsstring>
        <name>ml_xml_element_length</name>
        <param>
          <type>ml_xml_element_t *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="25" column="8" declfile="src/ml_xml.h" declline="25" declcolumn="8"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1a7ac93cf6108efd33efdc52feefdd1f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ml_xml_node_t *</type>
        <definition>ml_xml_node_t * ml_xml_element_head</definition>
        <argsstring>(ml_xml_element_t *Value)</argsstring>
        <name>ml_xml_element_head</name>
        <param>
          <type>ml_xml_element_t *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="26" column="15" declfile="src/ml_xml.h" declline="26" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1ab785039b88fb30c43f3bf829098bd7c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ml_xml_element_t *</type>
        <definition>ml_xml_element_t * ml_xml_element</definition>
        <argsstring>(const char *Tag)</argsstring>
        <name>ml_xml_element</name>
        <param>
          <type>const char *</type>
          <declname>Tag</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="28" column="18" declfile="src/ml_xml.h" declline="28" declcolumn="18"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1ac4a9b8c517d33a5c66193264883c496b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ml_xml_node_t *</type>
        <definition>ml_xml_node_t * ml_xml_text</definition>
        <argsstring>(const char *Content, int Length)</argsstring>
        <name>ml_xml_text</name>
        <param>
          <type>const char *</type>
          <declname>Content</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="29" column="15" declfile="src/ml_xml.h" declline="29" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1aeccd3fb4ca5a7b9c6a242feb68c0da23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_xml_element_put</definition>
        <argsstring>(ml_xml_element_t *Parent, ml_xml_node_t *Child)</argsstring>
        <name>ml_xml_element_put</name>
        <param>
          <type>ml_xml_element_t *</type>
          <declname>Parent</declname>
        </param>
        <param>
          <type>ml_xml_node_t *</type>
          <declname>Child</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="30" column="6" declfile="src/ml_xml.h" declline="30" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="ml__xml_8h_1a0373c058ef2dd0bdcbfcae5f0adb3d91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_parser_escape_xml_like</definition>
        <argsstring>(ml_parser_t *Parser, ml_value_t *Constructor)</argsstring>
        <name>ml_parser_escape_xml_like</name>
        <param>
          <type>ml_parser_t *</type>
          <declname>Parser</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Constructor</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_xml.h" line="32" column="12" declfile="src/ml_xml.h" declline="32" declcolumn="12"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#ifndef<sp/>ML_XML_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ML_XML_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;minilang.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ml_xml_init(<ref refid="structstringmap__t" kindref="compound">stringmap_t</ref><sp/>*Globals);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structml__type__t" kindref="compound">ml_type_t</ref><sp/>MLXmlT[];</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structml__type__t" kindref="compound">ml_type_t</ref><sp/>MLXmlTextT[];</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/><ref refid="structml__type__t" kindref="compound">ml_type_t</ref><sp/>MLXmlElementT[];</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ml_xml_node_t<sp/>ml_xml_node_t;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">ml_xml_element_t<sp/>ml_xml_element_t;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal">ml_xml_element_t<sp/>*ml_xml_node_parent(ml_xml_node_t<sp/>*Value);</highlight></codeline>
<codeline lineno="20"><highlight class="normal">ml_xml_node_t<sp/>*ml_xml_node_next(ml_xml_node_t<sp/>*Value);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">ml_xml_node_t<sp/>*ml_xml_node_prev(ml_xml_node_t<sp/>*Value);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*ml_xml_element_tag(ml_xml_element_t<sp/>*Value);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*ml_xml_element_attributes(ml_xml_element_t<sp/>*Value);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>ml_xml_element_length(ml_xml_element_t<sp/>*Value);</highlight></codeline>
<codeline lineno="26"><highlight class="normal">ml_xml_node_t<sp/>*ml_xml_element_head(ml_xml_element_t<sp/>*Value);</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal">ml_xml_element_t<sp/>*ml_xml_element(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Tag);</highlight></codeline>
<codeline lineno="29"><highlight class="normal">ml_xml_node_t<sp/>*ml_xml_text(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*Content,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>Length);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ml_xml_element_put(ml_xml_element_t<sp/>*Parent,<sp/>ml_xml_node_t<sp/>*Child);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*ml_parser_escape_xml_like(ml_parser_t<sp/>*Parser,<sp/><ref refid="structml__value__t" kindref="compound">ml_value_t</ref><sp/>*Constructor);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="src/ml_xml.h"/>
  </compounddef>
</doxygen>
