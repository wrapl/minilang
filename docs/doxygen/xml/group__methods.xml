<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="group__methods" kind="group">
    <compoundname>methods</compoundname>
    <title>Methods</title>
    <innerclass refid="structml__method__t" prot="public">ml_method_t</innerclass>
    <innerclass refid="structml__method__cached__t" prot="public">ml_method_cached_t</innerclass>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="group__methods_1ga8b6c7254a59c415e36424ece80842f85" prot="public" static="no">
        <type>struct ml_method_t</type>
        <definition>typedef struct ml_method_t ml_method_t</definition>
        <argsstring></argsstring>
        <name>ml_method_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="998" column="26" bodyfile="src/ml_types.h" bodystart="998" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__methods_1ga9cb4ebe1bd82710fe1bd5ad7964e38e9" prot="public" static="no">
        <type>struct ml_methods_t</type>
        <definition>typedef struct ml_methods_t ml_methods_t</definition>
        <argsstring></argsstring>
        <name>ml_methods_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="999" column="27" bodyfile="src/ml_types.h" bodystart="999" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group__methods_1ga820c5d189e5712125a3a86afbf0dca68" prot="public" static="no">
        <type>struct ml_method_cached_t</type>
        <definition>typedef struct ml_method_cached_t ml_method_cached_t</definition>
        <argsstring></argsstring>
        <name>ml_method_cached_t</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1027" column="33" bodyfile="src/ml_types.h" bodystart="1027" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="var">
      <memberdef kind="variable" id="group__methods_1ga156dd7b19b454f8ce3dce93bb30cddbc" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t* MLMethodDefine</definition>
        <argsstring></argsstring>
        <name>MLMethodDefine</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="995" column="19" declfile="src/ml_types.h" declline="995" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="group__methods_1ga65beab28734e99107675e8f68e8f97af" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t* MLMethodDefault</definition>
        <argsstring></argsstring>
        <name>MLMethodDefault</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="996" column="19" declfile="src/ml_types.h" declline="996" declcolumn="19"/>
      </memberdef>
      <memberdef kind="variable" id="group__methods_1ga8107ad8b261da2afa16428f5b9f69ff3" prot="public" static="no" extern="yes" mutable="no">
        <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref></type>
        <definition>ml_type_t MLMethodT[]</definition>
        <argsstring>[]</argsstring>
        <name>MLMethodT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1006" column="18" declfile="src/ml_types.h" declline="1006" declcolumn="18"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="group__methods_1ga24a660ca09a2087ddcbca0f87f855272" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_method</definition>
        <argsstring>(const char *Name) __attribute__((const))</argsstring>
        <name>ml_method</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1008" column="12" declfile="src/ml_types.h" declline="1008" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1gab1ff7f81d0396b2123a50db19370edbd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_method_anon</definition>
        <argsstring>(const char *Name) __attribute__((malloc))</argsstring>
        <name>ml_method_anon</name>
        <param>
          <type>const char *</type>
          <declname>Name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1009" column="12" declfile="src/ml_types.h" declline="1009" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga19f325e8e1304f08be11e3609f0e8019" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char * ml_method_name</definition>
        <argsstring>(const ml_value_t *Value) __attribute__((pure))</argsstring>
        <name>ml_method_name</name>
        <param>
          <type>const <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1010" column="12" declfile="src/ml_types.h" declline="1010" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga7993cead32f8dc82c0f45126da33139d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_method_by_name</definition>
        <argsstring>(const char *Method, void *Data, ml_callback_t Function,...) __attribute__((sentinel))</argsstring>
        <name>ml_method_by_name</name>
        <param>
          <type>const char *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callback_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1012" column="6" declfile="src/ml_types.h" declline="1012" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga4f75a1ae7a10ad6b9915123cb149eaa4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_method_by_value</definition>
        <argsstring>(void *Method, void *Data, ml_callback_t Function,...) __attribute__((sentinel))</argsstring>
        <name>ml_method_by_value</name>
        <param>
          <type>void *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callback_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1013" column="6" declfile="src/ml_types.h" declline="1013" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga5283c9c135b1f0f630c0bdc9f14ba50d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_methodx_by_name</definition>
        <argsstring>(const char *Method, void *Data, ml_callbackx_t Function,...) __attribute__((sentinel))</argsstring>
        <name>ml_methodx_by_name</name>
        <param>
          <type>const char *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1015" column="6" declfile="src/ml_types.h" declline="1015" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga023ab25dad2f59ad18b6335b6490ea09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_methodx_by_value</definition>
        <argsstring>(void *Method, void *Data, ml_callbackx_t Function,...) __attribute__((sentinel))</argsstring>
        <name>ml_methodx_by_value</name>
        <param>
          <type>void *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>Data</declname>
        </param>
        <param>
          <type>ml_callbackx_t</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1016" column="6" declfile="src/ml_types.h" declline="1016" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga97c748378d2d0beddd1257339e9c9e1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_method_define</definition>
        <argsstring>(ml_value_t *Value, ml_value_t *Function, int Count, ml_type_t *Variadic, ml_type_t **Types)</argsstring>
        <name>ml_method_define</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Value</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Variadic</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> **</type>
          <declname>Types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1018" column="6" declfile="src/ml_types.h" declline="1018" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1gac14ba6a54132392a062940c5869b60e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_method_definev</definition>
        <argsstring>(ml_value_t *Method, ml_value_t *Function, ml_type_t *Variadic,...)</argsstring>
        <name>ml_method_definev</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Function</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Variadic</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1019" column="6" declfile="src/ml_types.h" declline="1019" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1gaf62b9fef1c9ea9cff9bdc4311e791523" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_method_insert</definition>
        <argsstring>(ml_methods_t *Methods, ml_method_t *Method, ml_value_t *Callback, int Count, ml_type_t *Variadic, ml_type_t **Types)</argsstring>
        <name>ml_method_insert</name>
        <param>
          <type>ml_methods_t *</type>
          <declname>Methods</declname>
        </param>
        <param>
          <type><ref refid="structml__method__t" kindref="compound">ml_method_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Callback</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Variadic</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> **</type>
          <declname>Types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1021" column="6" declfile="src/ml_types.h" declline="1021" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga4749f3a2ba36e4fb969cc36e9663241e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_method_search</definition>
        <argsstring>(ml_methods_t *Methods, ml_method_t *Method, int Count, ml_value_t **Args)</argsstring>
        <name>ml_method_search</name>
        <param>
          <type>ml_methods_t *</type>
          <declname>Methods</declname>
        </param>
        <param>
          <type><ref refid="structml__method__t" kindref="compound">ml_method_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1023" column="12" declfile="src/ml_types.h" declline="1023" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga96179f90b5f275e78c26660bc7d66b7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_method_wrap</definition>
        <argsstring>(ml_value_t *Function, int Count, ml_type_t **Types)</argsstring>
        <name>ml_method_wrap</name>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
          <declname>Function</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> **</type>
          <declname>Types</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1025" column="12" declfile="src/ml_types.h" declline="1025" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga0fc75673f96ebaf344f82a82ceb54c1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__method__cached__t" kindref="compound">ml_method_cached_t</ref> *</type>
        <definition>ml_method_cached_t * ml_method_search_cached</definition>
        <argsstring>(ml_methods_t *Methods, ml_method_t *Method, int Count, ml_value_t **Args)</argsstring>
        <name>ml_method_search_cached</name>
        <param>
          <type>ml_methods_t *</type>
          <declname>Methods</declname>
        </param>
        <param>
          <type><ref refid="structml__method__t" kindref="compound">ml_method_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1038" column="20" declfile="src/ml_types.h" declline="1038" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1gac937fb4182678394b7e81c509eb2cba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__method__cached__t" kindref="compound">ml_method_cached_t</ref> *</type>
        <definition>ml_method_cached_t * ml_method_check_cached</definition>
        <argsstring>(ml_methods_t *Methods, ml_method_t *Method, ml_method_cached_t *Cached, int Count, ml_value_t **Args)</argsstring>
        <name>ml_method_check_cached</name>
        <param>
          <type>ml_methods_t *</type>
          <declname>Methods</declname>
        </param>
        <param>
          <type><ref refid="structml__method__t" kindref="compound">ml_method_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type><ref refid="structml__method__cached__t" kindref="compound">ml_method_cached_t</ref> *</type>
          <declname>Cached</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1039" column="20" declfile="src/ml_types.h" declline="1039" declcolumn="20"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga95135eb838866e7e3623d2a00ee64067" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>ml_value_t * ml_no_method_error</definition>
        <argsstring>(ml_method_t *Method, int Count, ml_value_t **Args)</argsstring>
        <name>ml_no_method_error</name>
        <param>
          <type><ref refid="structml__method__t" kindref="compound">ml_method_t</ref> *</type>
          <declname>Method</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Count</declname>
        </param>
        <param>
          <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **</type>
          <declname>Args</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1041" column="12" declfile="src/ml_types.h" declline="1041" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1gae187218fb2bf92e53a38147b004566e2" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * ml_type_constructor</definition>
        <argsstring>(ml_type_t *Type)</argsstring>
        <name>ml_type_constructor</name>
        <param>
          <type><ref refid="structml__type__t" kindref="compound">ml_type_t</ref> *</type>
          <declname>Type</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1047" column="26" bodyfile="src/ml_types.h" bodystart="1047" bodyend="1049"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1gabc6275f4b80281f55c49139cb8195235" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *</type>
        <definition>static ml_value_t * ml_nop</definition>
        <argsstring>(void *Value)</argsstring>
        <name>ml_nop</name>
        <param>
          <type>void *</type>
          <declname>Value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1063" column="26" bodyfile="src/ml_types.h" bodystart="1063" bodyend="1065"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1ga4720570cf52d415113f148571dc0c592" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void ml_methods_prevent_changes</definition>
        <argsstring>(ml_methods_t *Methods, int PreventChanges)</argsstring>
        <name>ml_methods_prevent_changes</name>
        <param>
          <type>ml_methods_t *</type>
          <declname>Methods</declname>
        </param>
        <param>
          <type>int</type>
          <declname>PreventChanges</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1107" column="6" declfile="src/ml_types.h" declline="1107" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="group__methods_1gab2d202d7abdf90638c17cdfd6cb9effd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>ml_methods_t *</type>
        <definition>ml_methods_t * ml_methods_context</definition>
        <argsstring>(ml_context_t *Context)</argsstring>
        <name>ml_methods_context</name>
        <param>
          <type><ref refid="structml__context__t" kindref="compound">ml_context_t</ref> *</type>
          <declname>Context</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1108" column="14" declfile="src/ml_types.h" declline="1108" declcolumn="14"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="define">
      <memberdef kind="define" id="group__methods_1gaebec330325aff5cbc7d9c9248e2cae4a" prot="public" static="no">
        <name>ML_CATEGORY</name>
        <initializer>&quot;?&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1043" column="9" bodyfile="src/ml_types.h" bodystart="1043" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__methods_1ga272af7e1f8cd6268a34791a598cf78e7" prot="public" static="no">
        <name>ML_METHOD</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1051" column="9" bodyfile="src/ml_types.h" bodystart="1051" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__methods_1ga4f204e431d9b7659aee5b331d1b48862" prot="public" static="no">
        <name>ML_METHODX</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static void CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1053" column="9" bodyfile="src/ml_types.h" bodystart="1053" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__methods_1ga0d37680ab8c57d883a4e0ecf54d4a9d4" prot="public" static="no">
        <name>ML_METHODZ</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static void CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1055" column="9" bodyfile="src/ml_types.h" bodystart="1055" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__methods_1ga4c0b4818638499747eeb9e22180fec5e" prot="public" static="no">
        <name>ML_METHODV</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1057" column="9" bodyfile="src/ml_types.h" bodystart="1057" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__methods_1gabd8f582650b75cb49f7a6361bf7f36c5" prot="public" static="no">
        <name>ML_METHODVX</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static void CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1059" column="9" bodyfile="src/ml_types.h" bodystart="1059" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__methods_1gadf8e7985d62855ef3943f5e5b89dc8e0" prot="public" static="no">
        <name>ML_METHODVZ</name>
        <param><defname>METHOD</defname></param>
        <param><defname>TYPES ...</defname></param>
        <initializer>static void CONCAT3(ml_method_fn_, __LINE__, __COUNTER__)(<ref refid="structml__state__t" kindref="compound">ml_state_t</ref> *Caller, void *Data, int Count, <ref refid="structml__value__t" kindref="compound">ml_value_t</ref> **Args)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1061" column="9" bodyfile="src/ml_types.h" bodystart="1061" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__methods_1gad14894651f7447fb91025fcbe4f6ecd4" prot="public" static="no">
        <name>ML_METHOD_DECL</name>
        <param><defname>NAME</defname></param>
        <param><defname>METHOD</defname></param>
        <initializer><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *NAME</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1067" column="9" bodyfile="src/ml_types.h" bodystart="1067" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="group__methods_1gaf0b55a478dd42162aad655cf717e1c1f" prot="public" static="no">
        <name>ML_METHOD_ANON</name>
        <param><defname>NAME</defname></param>
        <param><defname>METHOD</defname></param>
        <initializer><ref refid="structml__value__t" kindref="compound">ml_value_t</ref> *NAME</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/ml_types.h" line="1068" column="9" bodyfile="src/ml_types.h" bodystart="1068" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
