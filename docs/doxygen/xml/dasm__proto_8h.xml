<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="dasm__proto_8h" kind="file" language="C++">
    <compoundname>dasm_proto.h</compoundname>
    <includes local="no">stddef.h</includes>
    <includes local="no">stdarg.h</includes>
    <incdepgraph>
      <node id="1">
        <label>src/dynasm/dasm_proto.h</label>
        <link refid="dasm__proto_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>stdarg.h</label>
      </node>
      <node id="2">
        <label>stddef.h</label>
      </node>
    </incdepgraph>
    <sectiondef kind="define">
      <memberdef kind="define" id="dasm__proto_8h_1a5a989f2701c24182589fb62ed9f11a3d" prot="public" static="no">
        <name>DASM_IDENT</name>
        <initializer>&quot;DynASM 1.3.0&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="13" column="9" bodyfile="src/dynasm/dasm_proto.h" bodystart="13" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dasm__proto_8h_1aeba2cb11430f8149231658edc4cb2bf8" prot="public" static="no">
        <name>DASM_VERSION</name>
        <initializer>10300	/* 1.3.0 */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="14" column="9" bodyfile="src/dynasm/dasm_proto.h" bodystart="14" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dasm__proto_8h_1aeef4e2975c4cda564c8615d7851b3e7f" prot="public" static="no">
        <name>Dst_DECL</name>
        <initializer><ref refid="structdasm__State" kindref="compound">dasm_State</ref> **Dst</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="17" column="9" bodyfile="src/dynasm/dasm_proto.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dasm__proto_8h_1a72609aaee00a0967cadb0b07e23cd8ad" prot="public" static="no">
        <name>Dst_REF</name>
        <initializer>(*Dst)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="21" column="9" bodyfile="src/dynasm/dasm_proto.h" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dasm__proto_8h_1a60e23ddc7f27e442135ba2522535794a" prot="public" static="no">
        <name>DASM_FDEF</name>
        <initializer>extern</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="25" column="9" bodyfile="src/dynasm/dasm_proto.h" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dasm__proto_8h_1af7efe47bcc9da667ad85065f7c73c260" prot="public" static="no">
        <name>DASM_M_GROW</name>
        <param><defname>ctx</defname></param>
        <param><defname>t</defname></param>
        <param><defname>p</defname></param>
        <param><defname>sz</defname></param>
        <param><defname>need</defname></param>
        <initializer>  do { \
    size_t _sz = (sz), _need = (need); \
    if (_sz &lt; _need) { \
      if (_sz &lt; 16) _sz = 16; \
      while (_sz &lt; _need) _sz += _sz; \
      (p) = (t *)realloc((p), _sz); \
      if ((p) == NULL) exit(1); \
      (sz) = _sz; \
    } \
  } while(0)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="29" column="9" bodyfile="src/dynasm/dasm_proto.h" bodystart="29" bodyend="39"/>
      </memberdef>
      <memberdef kind="define" id="dasm__proto_8h_1a1da3a66d2c797a048a664e1a6eb85aef" prot="public" static="no">
        <name>DASM_M_FREE</name>
        <param><defname>ctx</defname></param>
        <param><defname>p</defname></param>
        <param><defname>sz</defname></param>
        <initializer>free(p)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="43" column="9" bodyfile="src/dynasm/dasm_proto.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dasm__proto_8h_1a033b8b734ab5dac3c33fa9de5e2f54c7" prot="public" static="no">
        <name>dasm_checkstep</name>
        <param><defname>a</defname></param>
        <param><defname>b</defname></param>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="79" column="10" bodyfile="src/dynasm/dasm_proto.h" bodystart="79" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dasm__proto_8h_1a766356f152477b6a2e271a94baafc06d" prot="public" static="no">
        <type>struct dasm_State</type>
        <definition>typedef struct dasm_State dasm_State</definition>
        <argsstring></argsstring>
        <name>dasm_State</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="47" column="25" bodyfile="src/dynasm/dasm_proto.h" bodystart="47" bodyend="-1"/>
      </memberdef>
    </sectiondef>
    <sectiondef kind="func">
      <memberdef kind="function" id="dasm__proto_8h_1a7e68d1fe0232c72e25b440299b79b366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DASM_FDEF void</type>
        <definition>DASM_FDEF void dasm_init</definition>
        <argsstring>(Dst_DECL, int maxsection)</argsstring>
        <name>dasm_init</name>
        <param>
          <type>Dst_DECL</type>
        </param>
        <param>
          <type>int</type>
          <declname>maxsection</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="51" column="16" bodyfile="src/dynasm/dasm_arm.h" bodystart="86" bodyend="107" declfile="src/dynasm/dasm_proto.h" declline="51" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="dasm__proto_8h_1a3d8254d0ce902fa5d25323aa02cb8f05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DASM_FDEF void</type>
        <definition>DASM_FDEF void dasm_free</definition>
        <argsstring>(Dst_DECL)</argsstring>
        <name>dasm_free</name>
        <param>
          <type>Dst_DECL</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="52" column="16" bodyfile="src/dynasm/dasm_arm.h" bodystart="110" bodyend="120" declfile="src/dynasm/dasm_proto.h" declline="52" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="dasm__proto_8h_1af8c2803200df60c6f5315cad2baec5f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DASM_FDEF void</type>
        <definition>DASM_FDEF void dasm_setupglobal</definition>
        <argsstring>(Dst_DECL, void **gl, unsigned int maxgl)</argsstring>
        <name>dasm_setupglobal</name>
        <param>
          <type>Dst_DECL</type>
        </param>
        <param>
          <type>void **</type>
          <declname>gl</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>maxgl</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="55" column="16" bodyfile="src/dynasm/dasm_arm.h" bodystart="123" bodyend="128" declfile="src/dynasm/dasm_proto.h" declline="55" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="dasm__proto_8h_1ab41033086bdac0cce94c34c00a901962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DASM_FDEF void</type>
        <definition>DASM_FDEF void dasm_growpc</definition>
        <argsstring>(Dst_DECL, unsigned int maxpc)</argsstring>
        <name>dasm_growpc</name>
        <param>
          <type>Dst_DECL</type>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>maxpc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="58" column="16" bodyfile="src/dynasm/dasm_arm.h" bodystart="131" bodyend="137" declfile="src/dynasm/dasm_proto.h" declline="58" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="dasm__proto_8h_1adebb1fb4ddc5ccb70ecca21b9e7f6cbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DASM_FDEF void</type>
        <definition>DASM_FDEF void dasm_setup</definition>
        <argsstring>(Dst_DECL, const void *actionlist)</argsstring>
        <name>dasm_setup</name>
        <param>
          <type>Dst_DECL</type>
        </param>
        <param>
          <type>const void *</type>
          <declname>actionlist</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="61" column="16" bodyfile="src/dynasm/dasm_arm.h" bodystart="140" bodyend="153" declfile="src/dynasm/dasm_proto.h" declline="61" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="dasm__proto_8h_1a8437555cf1c8c6e5af80fb56ef40d20c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DASM_FDEF void</type>
        <definition>DASM_FDEF void dasm_put</definition>
        <argsstring>(Dst_DECL, int start,...)</argsstring>
        <name>dasm_put</name>
        <param>
          <type>Dst_DECL</type>
        </param>
        <param>
          <type>int</type>
          <declname>start</declname>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="64" column="16" bodyfile="src/dynasm/dasm_arm.h" bodystart="177" bodyend="274" declfile="src/dynasm/dasm_proto.h" declline="64" declcolumn="16"/>
      </memberdef>
      <memberdef kind="function" id="dasm__proto_8h_1a6ff23f75187ed18c27dd3f35f615aa53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DASM_FDEF int</type>
        <definition>DASM_FDEF int dasm_link</definition>
        <argsstring>(Dst_DECL, size_t *szp)</argsstring>
        <name>dasm_link</name>
        <param>
          <type>Dst_DECL</type>
        </param>
        <param>
          <type>size_t *</type>
          <declname>szp</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="67" column="15" bodyfile="src/dynasm/dasm_arm.h" bodystart="278" bodyend="334" declfile="src/dynasm/dasm_proto.h" declline="67" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="dasm__proto_8h_1a2156dc8b93290e046fa7cc8fe307efd9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DASM_FDEF int</type>
        <definition>DASM_FDEF int dasm_encode</definition>
        <argsstring>(Dst_DECL, void *buffer)</argsstring>
        <name>dasm_encode</name>
        <param>
          <type>Dst_DECL</type>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="70" column="15" bodyfile="src/dynasm/dasm_arm.h" bodystart="344" bodyend="423" declfile="src/dynasm/dasm_proto.h" declline="70" declcolumn="15"/>
      </memberdef>
      <memberdef kind="function" id="dasm__proto_8h_1af5ef8e895e4396a1c17c01f3268b0284" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>DASM_FDEF int</type>
        <definition>DASM_FDEF int dasm_getpclabel</definition>
        <argsstring>(Dst_DECL, unsigned int pc)</argsstring>
        <name>dasm_getpclabel</name>
        <param>
          <type>Dst_DECL</type>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>pc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/dynasm/dasm_proto.h" line="73" column="15" bodyfile="src/dynasm/dasm_arm.h" bodystart="427" bodyend="436" declfile="src/dynasm/dasm_proto.h" declline="73" declcolumn="15"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">**<sp/>DynASM<sp/>encoding<sp/>engine<sp/>prototypes.</highlight></codeline>
<codeline lineno="3"><highlight class="comment">**<sp/>Copyright<sp/>(C)<sp/>2005-2017<sp/>Mike<sp/>Pall.<sp/>All<sp/>rights<sp/>reserved.</highlight></codeline>
<codeline lineno="4"><highlight class="comment">**<sp/>Released<sp/>under<sp/>the<sp/>MIT<sp/>license.<sp/>See<sp/>dynasm.lua<sp/>for<sp/>full<sp/>copyright<sp/>notice.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>_DASM_PROTO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>_DASM_PROTO_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stddef.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdarg.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DASM_IDENT<sp/><sp/>&quot;DynASM<sp/>1.3.0&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DASM_VERSION<sp/><sp/><sp/><sp/>10300<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>1.3.0<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Dst_DECL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Dst_DECL<sp/><sp/><sp/><sp/>dasm_State<sp/>**Dst</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>Dst_REF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>Dst_REF<sp/><sp/><sp/><sp/><sp/>(*Dst)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DASM_FDEF</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DASM_FDEF<sp/><sp/><sp/>extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DASM_M_GROW</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DASM_M_GROW(ctx,<sp/>t,<sp/>p,<sp/>sz,<sp/>need)<sp/>\</highlight></codeline>
<codeline lineno="30"><highlight class="preprocessor"><sp/><sp/>do<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>size_t<sp/>_sz<sp/>=<sp/>(sz),<sp/>_need<sp/>=<sp/>(need);<sp/>\</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>if<sp/>(_sz<sp/>&lt;<sp/>_need)<sp/>{<sp/>\</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>(_sz<sp/>&lt;<sp/>16)<sp/>_sz<sp/>=<sp/>16;<sp/>\</highlight></codeline>
<codeline lineno="34"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>while<sp/>(_sz<sp/>&lt;<sp/>_need)<sp/>_sz<sp/>+=<sp/>_sz;<sp/>\</highlight></codeline>
<codeline lineno="35"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(p)<sp/>=<sp/>(t<sp/>*)realloc((p),<sp/>_sz);<sp/>\</highlight></codeline>
<codeline lineno="36"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if<sp/>((p)<sp/>==<sp/>NULL)<sp/>exit(1);<sp/>\</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>(sz)<sp/>=<sp/>_sz;<sp/>\</highlight></codeline>
<codeline lineno="38"><highlight class="preprocessor"><sp/><sp/><sp/><sp/>}<sp/>\</highlight></codeline>
<codeline lineno="39"><highlight class="preprocessor"><sp/><sp/>}<sp/>while(0)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>DASM_M_FREE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>DASM_M_FREE(ctx,<sp/>p,<sp/>sz)<sp/>free(p)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Internal<sp/>DynASM<sp/>encoder<sp/>state.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structdasm__State" kindref="compound">dasm_State</ref><sp/><ref refid="structdasm__State" kindref="compound">dasm_State</ref>;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Initialize<sp/>and<sp/>free<sp/>DynASM<sp/>state.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal">DASM_FDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dasm_init(Dst_DECL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxsection);</highlight></codeline>
<codeline lineno="52"><highlight class="normal">DASM_FDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dasm_free(Dst_DECL);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Setup<sp/>global<sp/>array.<sp/>Must<sp/>be<sp/>called<sp/>before<sp/>dasm_setup().<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">DASM_FDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dasm_setupglobal(Dst_DECL,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**gl,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxgl);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Grow<sp/>PC<sp/>label<sp/>array.<sp/>Can<sp/>be<sp/>called<sp/>after<sp/>dasm_setup(),<sp/>too.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal">DASM_FDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dasm_growpc(Dst_DECL,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxpc);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Setup<sp/>encoder.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">DASM_FDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dasm_setup(Dst_DECL,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*actionlist);</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Feed<sp/>encoder<sp/>with<sp/>actions.<sp/>Calls<sp/>are<sp/>generated<sp/>by<sp/>pre-processor.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal">DASM_FDEF<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>dasm_put(Dst_DECL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start,<sp/>...);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Link<sp/>sections<sp/>and<sp/>return<sp/>the<sp/>resulting<sp/>size.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal">DASM_FDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dasm_link(Dst_DECL,<sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>*szp);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Encode<sp/>sections<sp/>into<sp/>buffer.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal">DASM_FDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dasm_encode(Dst_DECL,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*buffer);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Get<sp/>PC<sp/>label<sp/>offset.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal">DASM_FDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dasm_getpclabel(Dst_DECL,<sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pc);</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>DASM_CHECKS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Optional<sp/>sanity<sp/>checker<sp/>to<sp/>call<sp/>between<sp/>isolated<sp/>encoding<sp/>steps.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">DASM_FDEF<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dasm_checkstep(Dst_DECL,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>secmatch);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>dasm_checkstep(a,<sp/>b)<sp/><sp/><sp/><sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>_DASM_PROTO_H<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="src/dynasm/dasm_proto.h"/>
  </compounddef>
</doxygen>
