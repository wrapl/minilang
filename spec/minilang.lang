<?xml version="1.0" encoding="UTF-8"?>
<!--

 Author: Raja Mukherji

 This library is free software; you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation; either version 2 of the License, or
 (at your option) any later version.

 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program; if not, write to the Free Software
 Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

-->
<language id="minilang" _name="Minilang" version="2.0" _section="Sources">
  <metadata>
    <property name="mimetypes">text/x-minilang</property>
    <property name="globs">*.mini</property>
  </metadata>
  <styles>
    <style id="comment" _name="Comment" map-to="def:comment"/>
    <style id="error" _name="Error" map-to="def:error"/>
    <style id="symbol" _name="Symbol" map-to="def:builtin"/>
    <style id="escape" _name="Escaped Character" map-to="def:special-char"/>
    <style id="string" _name="String" map-to="def:string"/>
    <style id="keyword" _name="Keyword" map-to="def:keyword"/>
    <style id="operator" _name="Operator" map-to="def:operator"/>
    <style id="function" _name="Function" map-to="def:function"/>
    <style id="identifier" _name="Identifier" map-to="def:identifier"/>
    <style id="type" _name="Type" map-to="def:type"/>
    <style id="floating-point" _name="Floating point number" map-to="def:floating-point"/>
    <style id="decimal" _name="Decimal number" map-to="def:decimal"/>
  </styles>
  <definitions>
<!--
    <context id="bash-line-comment" style-ref="comment" end-at-line-end="true" extend-parent="false">
      <start>#</start>
      <include>
        <context ref="def:in-line-comment"/>
      </include>
    </context>
-->
    <context id="comment">
      <include>
        <context end-at-line-end="true" style-ref="comment">
          <start>:&gt;</start>
        </context>
        <context style-ref="comment">
          <start>:&lt;</start>
          <end>&gt;:</end>
          <include>
            <context ref="comment"/>
          </include>
        </context>
      </include>
    </context>
    <context id="escape" style-ref="escape">
      <match>\\((\\|"|'|n|t|\$|r|\{)|[0-7]{1,3}|x[0-9a-fA-F]{1,2})</match>
    </context>
    <context id="symbol">
      <include>
        <context style-ref="symbol">
          <match>:[a-zA-Z_][a-zA-Z0-9_]*</match>
        </context>
        <context style-ref="symbol">
          <start>:"</start>
          <end>"</end>
          <include>
            <context ref="escape"/>
          </include>
        </context>
      </include>
    </context>
    <context id="resolution">
      <include>
        <context style-ref="identifier" extend-parent="false">
          <match>::[a-zA-Z_][a-zA-Z0-9_]*</match>
        </context>
        <context style-ref="identifier" extend-parent="false">
          <start>::"</start>
          <end>"</end>
          <include>
            <context ref="escape"/>
          </include>
        </context>
      </include>
    </context>
    <context id="complex-string" style-ref="string">
      <start>'</start>
      <end>'</end>
      <include>
        <context ref="escape"/>
        <context id="string-expr" style-ref="def:type">
          <start>{</start>
          <end>}</end>
          <include>
            <context sub-pattern="0" where="start" style-ref="operator"/>
            <context sub-pattern="0" where="end" style-ref="operator"/>
            <context ref="minilang"/>
          </include>
        </context>
      </include>
    </context>
    <context id="simple-string" style-ref="string" end-at-line-end="true">
      <start>"</start>
      <end>"</end>
      <include>
        <context ref="escape"/>
      </include>
    </context>
    <context id="keywords" style-ref="keyword">
      <keyword>and</keyword>
      <keyword>case</keyword>
      <keyword>debug</keyword>
      <keyword>def</keyword>
      <keyword>do</keyword>
      <keyword>each</keyword>
      <keyword>else</keyword>
      <keyword>elseif</keyword>
      <keyword>end</keyword>
      <keyword>exit</keyword>
      <keyword>for</keyword>
      <keyword>fun</keyword>
      <keyword>if</keyword>
      <keyword>imp</keyword>
      <keyword>in</keyword>
      <keyword>is</keyword>
      <keyword>it</keyword>
      <keyword>let</keyword>
      <keyword>loop</keyword>
      <keyword>meth</keyword>
      <keyword>must</keyword>
      <keyword>next</keyword>
      <keyword>nil</keyword>
      <keyword>not</keyword>
      <keyword>not</keyword>
      <keyword>old</keyword>
      <keyword>on</keyword>
      <keyword>or</keyword>
      <keyword>recur</keyword>
      <keyword>ref</keyword>
      <keyword>ret</keyword>
      <keyword>seq</keyword>
      <keyword>susp</keyword>
      <keyword>switch</keyword>
      <keyword>then</keyword>
      <keyword>to</keyword>
      <keyword>until</keyword>
      <keyword>var</keyword>
      <keyword>when</keyword>
      <keyword>while</keyword>
      <keyword>with</keyword>
      <keyword>xor</keyword>
    </context>
    <context id="functions" style-ref="function">
      <keyword>all2</keyword>
      <keyword>all</keyword>
      <keyword>batch</keyword>
      <keyword>buffered</keyword>
      <keyword>callcc</keyword>
      <keyword>const</keyword>
      <keyword>context</keyword>
      <keyword>copy</keyword>
      <keyword>count2</keyword>
      <keyword>count</keyword>
      <keyword>dup</keyword>
      <keyword>exchange</keyword>
      <keyword>export</keyword>
      <keyword>false</keyword>
      <keyword>filter</keyword>
      <keyword>first2</keyword>
      <keyword>first</keyword>
      <keyword>fold</keyword>
      <keyword>grid</keyword>
      <keyword>halt</keyword>
      <keyword>import</keyword>
      <keyword>key</keyword>
      <keyword>last2</keyword>
      <keyword>last</keyword>
      <keyword>limit</keyword>
      <keyword>markcc</keyword>
      <keyword>max2</keyword>
      <keyword>max</keyword>
      <keyword>min2</keyword>
      <keyword>min</keyword>
      <keyword>pair</keyword>
      <keyword>parallel</keyword>
      <keyword>print</keyword>
      <keyword>prod</keyword>
      <keyword>property</keyword>
      <keyword>raise</keyword>
      <keyword>reduce2</keyword>
      <keyword>reduce</keyword>
      <keyword>repeat</keyword>
      <keyword>replace</keyword>
      <keyword>skip</keyword>
      <keyword>some</keyword>
      <keyword>sum</keyword>
      <keyword>swap</keyword>
      <keyword>swapcc</keyword>
      <keyword>tasks</keyword>
      <keyword>true</keyword>
      <keyword>unfold</keyword>
      <keyword>unique</keyword>
      <keyword>unpack</keyword>
      <keyword>watched</keyword>
      <keyword>weave</keyword>
      <keyword>zip</keyword>
    </context>
    <context id="types" style-ref="type">
      <keyword>class</keyword>
      <keyword>object</keyword>
      <keyword>enum</keyword>
      <keyword>method</keyword>
      <keyword>any</keyword>
      <keyword>type</keyword>
      <keyword>error</keyword>
      <keyword>function</keyword>
      <keyword>number</keyword>
      <keyword>integer</keyword>
      <keyword>real</keyword>
      <keyword>complex</keyword>
      <keyword>address</keyword>
      <keyword>string</keyword>
      <keyword>buffer</keyword>
      <keyword>sequence</keyword>
      <keyword>list</keyword>
      <keyword>map</keyword>
      <keyword>time</keyword>
      <keyword>tuple</keyword>
      <keyword>regex</keyword>
      <keyword>array</keyword>
      <keyword>table</keyword>
      <keyword>file</keyword>
      <keyword>enum</keyword>
      <keyword>flags</keyword>
      <keyword>macro</keyword>
    </context>
    <context id="operators" style-ref="operator" extend-parent="false">
      <match>[-.:#~^@;,/$%|\=\+\*\!\?&amp;&lt;&gt;\[\]\\{}\()]</match>
    </context>
    <context id="assignment" style-ref="operator" extend-parent="false">
      <match>:=</match>
    </context>
    <context id="float" style-ref="floating-point">
      <match extended="true">
        (?&lt;![\w\.])
        ([0-9]+[Ee][+-]?[0-9]+ |
         ([0-9]*\.[0-9]+ | [0-9]+\.[0-9]*)([Ee][+-]?[0-9]+)?)(i?)
        (?![\w\.])
      </match>
    </context>
    <context id="decimal-number" style-ref="decimal">
      <match extended="true">
        (?&lt;![\w\.])
        [+-]?([1-9][0-9]*|0)(i?)
        (?![\w\.])
      </match>
    </context>
    <context id="embedded-lang-hook">
      <start>\%{def:never-match}</start>
      <end></end>
    </context>
    <context id="minilang">
      <include>
<!--
	<context ref="bash-line-comment"/>
-->
        <context ref="comment"/>
        <context ref="simple-string"/>
        <context ref="complex-string"/>
        <context ref="assignment"/>
        <context ref="resolution"/>
        <context ref="symbol"/>
        <context ref="keywords"/>
        <context ref="functions"/>
        <context ref="types"/>
        <context ref="operators"/>
        <context ref="float"/>
        <context ref="decimal-number"/>
        <context ref="embedded-lang-hook"/>
      </include>
    </context>
  </definitions>
</language>
